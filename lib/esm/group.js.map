{"version":3,"file":"group.js","sources":["../../src/group.js"],"sourcesContent":["import { MissingArgument, InvalidArgument } from \"./errors/index.js\";\r\n\r\nexport class Group {\r\n  static identifier = \"Group\";\r\n  static cardinalityNoneOrOneProps = new Set([\r\n    \"AnniversaryProperty\",\r\n    \"BdayProperty\",\r\n    \"GenderProperty\",\r\n    \"BirthPlaceProperty\",\r\n    \"DeathPlaceProperty\",\r\n    \"DeathDateProperty\",\r\n    \"KindProperty\",\r\n    \"NProperty\",\r\n    \"ProdidProperty\",\r\n    \"RevProperty\",\r\n    \"UIDProperty\",\r\n  ]);\r\n\r\n  #props;\r\n  #groupName;\r\n\r\n  #propertyInstanceCount = new Map([\r\n    [\"FNProperty\", 0],\r\n    [\"AnniversaryProperty\", 0],\r\n    [\"BdayProperty\", 0],\r\n    [\"GenderProperty\", 0],\r\n    [\"BirthPlaceProperty\", 0],\r\n    [\"DeathPlaceProperty\", 0],\r\n    [\"DeathDateProperty\", 0],\r\n    [\"KindProperty\", 0],\r\n    [\"NProperty\", 0],\r\n    [\"ProdidProperty\", 0],\r\n    [\"RevProperty\", 0],\r\n    [\"UIDProperty\", 0],\r\n  ]);\r\n\r\n  get propertyInstanceCount() {\r\n    return this.#propertyInstanceCount;\r\n  }\r\n\r\n  get properties() {\r\n    return this.#props;\r\n  }\r\n\r\n  hasMemberProperty = false;\r\n  kindPropertyIsGroup = false;\r\n\r\n  repr() {\r\n    const CRLF = \"\\r\\n\";\r\n\r\n    return this.#props\r\n      .reduce((accumulatedProps, currentProp) => {\r\n        accumulatedProps.push(`${this.#groupName}.${currentProp.repr()}`);\r\n        return accumulatedProps;\r\n      }, [])\r\n      .join(CRLF);\r\n  }\r\n\r\n  reprXML() {\r\n    let valueXML = \"\";\r\n    valueXML += `<group name=\"${this.#groupName}\">`;\r\n\r\n    valueXML += this.#props.reduce(\r\n      (accumulatedParameters, currentParameter) =>\r\n        accumulatedParameters + currentParameter.reprXML(),\r\n      \"\"\r\n    );\r\n\r\n    valueXML += \"</group>\";\r\n\r\n    return valueXML;\r\n  }\r\n\r\n  reprJSON() {\r\n    return this.#props.reduce((accumulatedProps, currentProp) => {\r\n      const prop = currentProp.reprJSON();\r\n      prop[1] = {\r\n        ...prop[1],\r\n        group: this.#groupName,\r\n      };\r\n\r\n      accumulatedProps.push(prop);\r\n      return accumulatedProps;\r\n    }, []);\r\n  }\r\n\r\n  #validate(props, groupName) {\r\n    if (\r\n      typeof props === \"undefined\" ||\r\n      typeof groupName === \"undefined\" ||\r\n      groupName === \"\"\r\n    )\r\n      throw new MissingArgument(\r\n        \"Properties to be grouped and the group name must be supplied\"\r\n      );\r\n    else if (!Array.isArray(props))\r\n      throw new InvalidArgument(\r\n        \"Properties for Group must be passed in an array\"\r\n      );\r\n    else if (!(props.length > 0))\r\n      throw new MissingArgument(\"Properties to be grouped must be supplied\");\r\n    else if (typeof groupName !== \"string\")\r\n      throw new TypeError(\"Group name must be of type string\");\r\n    else if (!/^[A-Za-z0-9-]+$/.test(groupName))\r\n      throw new InvalidArgument(\"Invalid group name\");\r\n\r\n    for (const prop of props) {\r\n      if (!/Property$/.test(prop.constructor.identifier))\r\n        throw new InvalidArgument(\r\n          \"Unidentified item included in properties to be grouped\"\r\n        );\r\n\r\n      switch (prop.constructor.identifier) {\r\n        case \"MemberProperty\":\r\n          this.hasMemberProperty = true;\r\n          break;\r\n\r\n        case \"KindProperty\":\r\n          if (/^group$/i.test(prop.value)) this.kindPropertyIsGroup = true;\r\n          break;\r\n\r\n        case \"Group\":\r\n          throw new InvalidArgument(\r\n            \"A group must not be included in the properties to be grouped\"\r\n          );\r\n      }\r\n\r\n      if (!this.#propertyInstanceCount.has(prop.constructor.identifier))\r\n        continue;\r\n\r\n      let count = this.#propertyInstanceCount.get(prop.constructor.identifier);\r\n      count++;\r\n      this.#propertyInstanceCount.set(prop.constructor.identifier, count);\r\n    }\r\n  }\r\n\r\n  constructor(props, groupName) {\r\n    this.#validate(props, groupName);\r\n    this.#props = props;\r\n    this.#groupName = groupName;\r\n\r\n    Object.freeze(this);\r\n  }\r\n}\r\n\r\nObject.freeze(Group);\r\n"],"names":["_props","WeakMap","_groupName","_propertyInstanceCount","_Group_brand","WeakSet","Group","props","groupName","_classCallCheck","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","Map","_defineProperty","_assertClassBrand","_validate","call","_classPrivateFieldSet","Object","freeze","_createClass","key","get","_classPrivateFieldGet","value","repr","_this","CRLF","reduce","accumulatedProps","currentProp","push","concat","join","reprXML","valueXML","accumulatedParameters","currentParameter","reprJSON","_this2","prop","_objectSpread","group","MissingArgument","Array","isArray","InvalidArgument","length","TypeError","test","_iterator","_createForOfIteratorHelper","_step","s","n","done","constructor","identifier","hasMemberProperty","kindPropertyIsGroup","has","count","set","err","e","f","Set"],"mappings":"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"}