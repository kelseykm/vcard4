{"version":3,"file":"card.js","sources":["../../src/card.js"],"sourcesContent":["import { MissingArgument, InvalidArgument } from \"./errors/index.js\";\n\nexport class VCARD {\n  static cardinalityNoneOrOneProps = new Set([\n    \"AnniversaryProperty\",\n    \"BdayProperty\",\n    \"GenderProperty\",\n    \"BirthPlaceProperty\",\n    \"DeathPlaceProperty\",\n    \"DeathDateProperty\",\n    \"KindProperty\",\n    \"NProperty\",\n    \"ProdidProperty\",\n    \"RevProperty\",\n    \"UIDProperty\",\n  ]);\n\n  #props;\n\n  repr() {\n    const CRLF = \"\\r\\n\";\n\n    let value = \"\";\n    value += \"BEGIN:VCARD\" + CRLF;\n    value += \"VERSION:4.0\" + CRLF;\n\n    value +=\n      this.#props\n        .reduce((accumulatedProps, currentProp) => {\n          accumulatedProps.push(currentProp.repr());\n          return accumulatedProps;\n        }, [])\n        .join(CRLF) + CRLF;\n\n    value += \"END:VCARD\" + CRLF;\n\n    return value;\n  }\n\n  reprXML() {\n    let valueXML = \"\";\n    valueXML += '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    valueXML += '<vcards xmlns=\"urn:ietf:params:xml:ns:vcard-4.0\">';\n    valueXML += \"<vcard>\";\n\n    valueXML += this.#props.reduce(\n      (accumulatedParameters, currentParameter) =>\n        accumulatedParameters + currentParameter.reprXML(),\n      \"\"\n    );\n\n    valueXML += \"</vcard>\";\n    valueXML += \"</vcards>\";\n\n    return valueXML;\n  }\n\n  reprJSON() {\n    return [\n      \"vcard\",\n      this.#props.reduce((accumulatedProps, currentProp) => {\n        if (currentProp.constructor.identifier === \"Group\")\n          accumulatedProps = accumulatedProps.concat(currentProp.reprJSON());\n        else accumulatedProps.push(currentProp.reprJSON());\n\n        return accumulatedProps;\n      }, []),\n    ];\n  }\n\n  #validate(props) {\n    if (typeof props === \"undefined\")\n      throw new MissingArgument(\"Properties for VCARD must be supplied\");\n    else if (!Array.isArray(props))\n      throw new InvalidArgument(\n        \"Properties for VCARD must be passed in an array\"\n      );\n\n    const propertyInstanceCount = new Map([\n      [\"FNProperty\", 0],\n      [\"AnniversaryProperty\", 0],\n      [\"BdayProperty\", 0],\n      [\"GenderProperty\", 0],\n      [\"BirthPlaceProperty\", 0],\n      [\"DeathPlaceProperty\", 0],\n      [\"DeathDateProperty\", 0],\n      [\"KindProperty\", 0],\n      [\"NProperty\", 0],\n      [\"ProdidProperty\", 0],\n      [\"RevProperty\", 0],\n      [\"UIDProperty\", 0],\n    ]);\n    let hasMemberProperty = false;\n    let kindPropertyIsGroup = false;\n\n    for (const prop of props) {\n      if (!/(?:^Group$|Property$)/.test(prop.constructor.identifier))\n        throw new InvalidArgument(\"Unidentified item included in properties\");\n\n      let count;\n\n      switch (prop.constructor.identifier) {\n        case \"MemberProperty\":\n          hasMemberProperty = true;\n          break;\n\n        case \"KindProperty\":\n          if (/^group$/i.test(prop.value)) kindPropertyIsGroup = true;\n          break;\n\n        case \"Group\":\n          if (prop.hasMemberProperty) hasMemberProperty = true;\n\n          if (prop.kindPropertyIsGroup) kindPropertyIsGroup = true;\n\n          for (const propName of prop.propertyInstanceCount.keys()) {\n            const _groupCount = prop.propertyInstanceCount.get(propName);\n            const _cardcount = propertyInstanceCount.get(propName);\n\n            count = _groupCount + _cardcount;\n\n            propertyInstanceCount.set(propName, count);\n          }\n          break;\n\n        default:\n          if (!propertyInstanceCount.has(prop.constructor.identifier)) continue;\n\n          count = propertyInstanceCount.get(prop.constructor.identifier);\n          count++;\n          propertyInstanceCount.set(prop.constructor.identifier, count);\n      }\n    }\n\n    if (\n      Array.from(this.constructor.cardinalityNoneOrOneProps.keys()).some(\n        (property) => propertyInstanceCount.get(property) > 1\n      )\n    ) {\n      for (const property of propertyInstanceCount.keys()) {\n        if (propertyInstanceCount.get(property) <= 1) continue;\n\n        const offendingProps = props.filter(\n          (prop) => prop.constructor.identifier === property\n        );\n\n        if (!/ALTID=/.test(offendingProps[0]?.params))\n          throw new InvalidArgument(\n            \"AnniversaryProperty, BdayProperty, GenderProperty, BirthPlaceProperty, DeathPlaceProperty, DeathdateProperty, KindProperty, NProperty, ProdidProperty, RevProperty and UIDProperty must not have more than one instance supplied, unless they have similar AltidParameters\"\n          );\n\n        const referenceAltid = offendingProps[0].params\n          .split(\";\")\n          .filter((param) => /^ALTID=/.test(param))\n          .pop();\n\n        let followsCardinality = offendingProps.every((prop) => {\n          const altid = prop.params\n            .split(\";\")\n            .filter((param) => /^ALTID=/.test(param))\n            .pop();\n\n          return altid === referenceAltid;\n        });\n\n        if (offendingProps.length < propertyInstanceCount.get(property)) {\n          const groups = props.filter(\n            (prop) => prop.constructor.identifier === \"Group\"\n          );\n\n          followsCardinality =\n            followsCardinality &&\n            groups.every((group) => {\n              const offendingGroupProps = group.properties.filter(\n                (prop) => prop.constructor.identifier === property\n              );\n\n              return offendingGroupProps.every((prop) => {\n                const altid = prop.params\n                  .split(\";\")\n                  .filter((param) => /^ALTID=/.test(param))\n                  .pop();\n\n                return altid === referenceAltid;\n              });\n            });\n        }\n\n        if (!followsCardinality)\n          throw new InvalidArgument(\n            \"AnniversaryProperty, BdayProperty, GenderProperty, BirthPlaceProperty, DeathPlaceProperty, DeathdateProperty, KindProperty, NProperty, ProdidProperty, RevProperty and UIDProperty must not have more than one instance supplied, unless they have similar AltidParameters\"\n          );\n      }\n    }\n\n    if (propertyInstanceCount.get(\"FNProperty\") < 1)\n      throw new MissingArgument(\n        \"One or more FNProperty instances must be supplied\"\n      );\n    else if (hasMemberProperty && !kindPropertyIsGroup)\n      throw new InvalidArgument(\n        'MemberProperty should only be used if the value of the KindProperty is \"group\"'\n      );\n  }\n\n  constructor(props) {\n    this.#validate(props);\n    this.#props = props;\n\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(VCARD);\n"],"names":["VCARD","props","Object","freeze","CRLF","value","reduce","accumulatedProps","currentProp","push","repr","join","valueXML","accumulatedParameters","currentParameter","reprXML","constructor","identifier","concat","reprJSON","MissingArgument","Array","isArray","InvalidArgument","propertyInstanceCount","Map","hasMemberProperty","kindPropertyIsGroup","prop","test","count","keys","propName","_groupCount","get","_cardcount","set","has","from","cardinalityNoneOrOneProps","some","property","offendingProps","filter","params","referenceAltid","split","param","pop","followsCardinality","every","altid","length","groups","group","offendingGroupProps","properties","Set"],"mappings":"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"}