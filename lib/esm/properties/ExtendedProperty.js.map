{"version":3,"file":"ExtendedProperty.js","sources":["../../../src/properties/ExtendedProperty.js"],"sourcesContent":["import { BaseProperty } from \"./BaseProperty.js\";\r\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\r\n\r\nexport class ExtendedProperty extends BaseProperty {\r\n  static identifier = \"ExtendedProperty\";\r\n  static cardinality = \"*\";\r\n  static acceptableParamTypes = new Set([\r\n    \"LanguageParameter\",\r\n    \"ValueParameter\",\r\n    \"PrefParameter\",\r\n    \"AltidParameter\",\r\n    \"PIDParameter\",\r\n    \"TypeParameter\",\r\n    \"MediatypeParameter\",\r\n    \"CalscaleParameter\",\r\n    \"SortAsParameter\",\r\n    \"GeoParameter\",\r\n    \"TzParameter\",\r\n    \"AnyParameter\",\r\n    \"LabelParameter\",\r\n    \"CCParameter\",\r\n    \"IndexParameter\",\r\n    \"LevelParameter\",\r\n  ]);\r\n  static acceptableValTypes = new Set([\r\n    \"TextType\",\r\n    \"TextListType\",\r\n    \"BooleanType\",\r\n    \"DateTimeType\",\r\n    \"DateTimeListType\",\r\n    \"IntegerType\",\r\n    \"IntegerListType\",\r\n    \"FloatType\",\r\n    \"FloatListType\",\r\n    \"LanguageTagType\",\r\n    \"URIType\",\r\n    \"SexType\",\r\n    \"SpecialValueType\",\r\n  ]);\r\n\r\n  #propRegExp = /^x-[a-z0-9-]+$/i;\r\n  #params;\r\n  #value;\r\n\r\n  get params() {\r\n    return this.#params\r\n      .reduce((parametersArray, currentParameter) => {\r\n        parametersArray.push(currentParameter.repr());\r\n        return parametersArray;\r\n      }, [])\r\n      .join(\";\");\r\n  }\r\n\r\n  get paramsXML() {\r\n    return this.#params.reduce(\r\n      (accumulatedParameters, currentParameter) =>\r\n        accumulatedParameters + currentParameter.reprXML(),\r\n      \"\"\r\n    );\r\n  }\r\n\r\n  get paramsJSON() {\r\n    return this.#params.reduce(\r\n      (accumulatedParameters, currentParameter) => ({\r\n        ...currentParameter.reprJSON(),\r\n        ...accumulatedParameters,\r\n      }),\r\n      {}\r\n    );\r\n  }\r\n\r\n  get value() {\r\n    return this.#value.repr();\r\n  }\r\n\r\n  get valueXML() {\r\n    return this.#value.reprXML();\r\n  }\r\n\r\n  get valueJSON() {\r\n    return this.#value.reprJSON();\r\n  }\r\n\r\n  #validate(prop, params, value) {\r\n    if (\r\n      typeof prop === \"undefined\" ||\r\n      typeof params === \"undefined\" ||\r\n      typeof value === \"undefined\"\r\n    )\r\n      throw new MissingArgument(\r\n        \"Property, parameter and value for ExtendedProperty must be supplied\"\r\n      );\r\n    else if (!Array.isArray(params))\r\n      throw new InvalidArgument(\r\n        \"Parameters for ExtendedProperty must be passed in an array\"\r\n      );\r\n    else if (!this.#propRegExp.test(prop))\r\n      throw new InvalidArgument(\"Invalid property for ExtendedProperty\");\r\n\r\n    const parameterInstanceCount = new Set();\r\n\r\n    if (\r\n      !params.every((param) => {\r\n        if (param.constructor.identifier !== \"AnyParameter\") {\r\n          if (parameterInstanceCount.has(param.constructor.identifier))\r\n            throw new InvalidArgument(\r\n              \"Parameters must not have more than one instance supplied\"\r\n            );\r\n          else parameterInstanceCount.add(param.constructor.identifier);\r\n        } else {\r\n          if (parameterInstanceCount.has(param.param))\r\n            throw new InvalidArgument(\r\n              \"Parameters must not have more than one instance supplied\"\r\n            );\r\n          else parameterInstanceCount.add(param.param);\r\n        }\r\n\r\n        if (param.constructor.identifier === \"ValueParameter\")\r\n          return param.value === value.repr().toLowerCase();\r\n        return this.constructor.acceptableParamTypes.has(\r\n          param.constructor.identifier\r\n        );\r\n      })\r\n    )\r\n      throw new TypeError(\r\n        \"Some of the parameters passed are not valid parameters for ExtendedProperty\"\r\n      );\r\n    else if (\r\n      !this.constructor.acceptableValTypes.has(value.constructor.identifier)\r\n    )\r\n      throw new TypeError(\"Invalid type for value of ExtendedProperty\");\r\n  }\r\n\r\n  constructor(prop, params, value) {\r\n    super();\r\n\r\n    this.#validate(prop, params, value);\r\n    this.prop = prop.toString().toUpperCase();\r\n    this.#params = params;\r\n    this.#value = value;\r\n\r\n    this.checkAbstractPropertiesAndMethods();\r\n    Object.freeze(this);\r\n  }\r\n}\r\n\r\nObject.freeze(ExtendedProperty);\r\n"],"names":["_propRegExp","WeakMap","_params","_value","_ExtendedProperty_brand","WeakSet","ExtendedProperty","_BaseProperty","prop","params","value","_this","_classCallCheck","_callSuper","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_assertClassBrand","_validate","call","toString","toUpperCase","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_inherits","_createClass","key","get","_classPrivateFieldGet","reduce","parametersArray","currentParameter","push","repr","join","accumulatedParameters","reprXML","_objectSpread","reprJSON","BaseProperty","_this2","MissingArgument","Array","isArray","InvalidArgument","test","parameterInstanceCount","Set","every","param","constructor","identifier","has","add","toLowerCase","acceptableParamTypes","TypeError","acceptableValTypes","_defineProperty"],"mappings":"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"}