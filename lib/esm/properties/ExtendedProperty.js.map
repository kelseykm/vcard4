{"version":3,"file":"ExtendedProperty.js","sources":["../../../src/properties/ExtendedProperty.js"],"sourcesContent":["import { BaseProperty } from \"./BaseProperty.js\";\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\n\nexport class ExtendedProperty extends BaseProperty {\n  static identifier = \"ExtendedProperty\";\n  static cardinality = \"*\";\n  static acceptableParamTypes = new Set([\n    \"LanguageParameter\",\n    \"ValueParameter\",\n    \"PrefParameter\",\n    \"AltidParameter\",\n    \"PIDParameter\",\n    \"TypeParameter\",\n    \"MediatypeParameter\",\n    \"CalscaleParameter\",\n    \"SortAsParameter\",\n    \"GeoParameter\",\n    \"TzParameter\",\n    \"AnyParameter\",\n    \"LabelParameter\",\n    \"CCParameter\",\n    \"IndexParameter\",\n    \"LevelParameter\",\n  ]);\n  static acceptableValTypes = new Set([\n    \"TextType\",\n    \"TextListType\",\n    \"BooleanType\",\n    \"DateTimeType\",\n    \"DateTimeListType\",\n    \"IntegerType\",\n    \"IntegerListType\",\n    \"FloatType\",\n    \"FloatListType\",\n    \"LanguageTagType\",\n    \"URIType\",\n    \"SexType\",\n    \"SpecialValueType\",\n  ]);\n\n  #propRegExp = /^x-[a-z0-9-]+$/i;\n  #params;\n  #value;\n\n  get params() {\n    return this.#params\n      .reduce((parametersArray, currentParameter) => {\n        parametersArray.push(currentParameter.repr());\n        return parametersArray;\n      }, [])\n      .join(\";\");\n  }\n\n  get paramsXML() {\n    return this.#params.reduce(\n      (accumulatedParameters, currentParameter) =>\n        accumulatedParameters + currentParameter.reprXML(),\n      \"\"\n    );\n  }\n\n  get paramsJSON() {\n    return this.#params.reduce(\n      (accumulatedParameters, currentParameter) => ({\n        ...currentParameter.reprJSON(),\n        ...accumulatedParameters,\n      }),\n      {}\n    );\n  }\n\n  get value() {\n    return this.#value.repr();\n  }\n\n  get valueXML() {\n    return this.#value.reprXML();\n  }\n\n  get valueJSON() {\n    return this.#value.reprJSON();\n  }\n\n  #validate(prop, params, value) {\n    if (\n      typeof prop === \"undefined\" ||\n      typeof params === \"undefined\" ||\n      typeof value === \"undefined\"\n    )\n      throw new MissingArgument(\n        \"Property, parameter and value for ExtendedProperty must be supplied\"\n      );\n    else if (!Array.isArray(params))\n      throw new InvalidArgument(\n        \"Parameters for ExtendedProperty must be passed in an array\"\n      );\n    else if (!this.#propRegExp.test(prop))\n      throw new InvalidArgument(\"Invalid property for ExtendedProperty\");\n\n    const parameterInstanceCount = new Set();\n\n    if (\n      !params.every((param) => {\n        if (param.constructor.identifier !== \"AnyParameter\") {\n          if (parameterInstanceCount.has(param.constructor.identifier))\n            throw new InvalidArgument(\n              \"Parameters must not have more than one instance supplied\"\n            );\n          else parameterInstanceCount.add(param.constructor.identifier);\n        } else {\n          if (parameterInstanceCount.has(param.param))\n            throw new InvalidArgument(\n              \"Parameters must not have more than one instance supplied\"\n            );\n          else parameterInstanceCount.add(param.param);\n        }\n\n        if (param.constructor.identifier === \"ValueParameter\")\n          return param.value === value.repr().toLowerCase();\n        return this.constructor.acceptableParamTypes.has(\n          param.constructor.identifier\n        );\n      })\n    )\n      throw new TypeError(\n        \"Some of the parameters passed are not valid parameters for ExtendedProperty\"\n      );\n    else if (\n      !this.constructor.acceptableValTypes.has(value.constructor.identifier)\n    )\n      throw new TypeError(\"Invalid type for value of ExtendedProperty\");\n  }\n\n  constructor(prop, params, value) {\n    super();\n\n    this.#validate(prop, params, value);\n    this.prop = prop.toString().toUpperCase();\n    this.#params = params;\n    this.#value = value;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(ExtendedProperty);\n"],"names":["_propRegExp","WeakMap","_params","_value","_validate","WeakSet","ExtendedProperty","_BaseProperty","_inherits","_super","_createSuper","prop","params","value","_this","_classCallCheck","call","_classPrivateMethodInitSpec","_assertThisInitialized","_classPrivateFieldInitSpec","writable","_classPrivateMethodGet","_validate2","toString","toUpperCase","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_createClass","key","get","_classPrivateFieldGet","reduce","parametersArray","currentParameter","push","repr","join","accumulatedParameters","reprXML","_objectSpread","reprJSON","BaseProperty","_this2","MissingArgument","Array","isArray","InvalidArgument","test","parameterInstanceCount","Set","every","param","constructor","identifier","has","add","toLowerCase","acceptableParamTypes","TypeError","acceptableValTypes","_defineProperty"],"mappings":"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"}