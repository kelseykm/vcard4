{"version":3,"file":"FNProperty.js","sources":["../../../src/properties/FNProperty.js"],"sourcesContent":["import { BaseProperty } from \"./BaseProperty.js\";\r\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\r\n\r\nexport class FNProperty extends BaseProperty {\r\n  static identifier = \"FNProperty\";\r\n  static prop = \"FN\";\r\n  static cardinality = \"1*\";\r\n  static acceptableParamTypes = new Set([\r\n    \"ValueParameter\",\r\n    \"TypeParameter\",\r\n    \"LanguageParameter\",\r\n    \"AltidParameter\",\r\n    \"PIDParameter\",\r\n    \"PrefParameter\",\r\n    \"IndexParameter\",\r\n    \"AnyParameter\",\r\n  ]);\r\n  static acceptableValTypes = \"TextType\";\r\n\r\n  #params;\r\n  #value;\r\n\r\n  get params() {\r\n    return this.#params\r\n      .reduce((parametersArray, currentParameter) => {\r\n        parametersArray.push(currentParameter.repr());\r\n        return parametersArray;\r\n      }, [])\r\n      .join(\";\");\r\n  }\r\n\r\n  get paramsXML() {\r\n    return this.#params.reduce(\r\n      (accumulatedParameters, currentParameter) =>\r\n        accumulatedParameters + currentParameter.reprXML(),\r\n      \"\"\r\n    );\r\n  }\r\n\r\n  get paramsJSON() {\r\n    return this.#params.reduce(\r\n      (accumulatedParameters, currentParameter) => ({\r\n        ...currentParameter.reprJSON(),\r\n        ...accumulatedParameters,\r\n      }),\r\n      {}\r\n    );\r\n  }\r\n\r\n  get value() {\r\n    return this.#value.repr();\r\n  }\r\n\r\n  get valueXML() {\r\n    return this.#value.reprXML();\r\n  }\r\n\r\n  get valueJSON() {\r\n    return this.#value.reprJSON();\r\n  }\r\n\r\n  #validate(params, value) {\r\n    if (typeof params === \"undefined\" || typeof value === \"undefined\")\r\n      throw new MissingArgument(\r\n        \"Parameters and value for FNProperty must be supplied\"\r\n      );\r\n    else if (!Array.isArray(params))\r\n      throw new InvalidArgument(\r\n        \"Parameters for FNProperty must be passed in an array\"\r\n      );\r\n\r\n    const parameterInstanceCount = new Set();\r\n\r\n    if (\r\n      !params.every((param) => {\r\n        if (param.constructor.identifier !== \"AnyParameter\") {\r\n          if (parameterInstanceCount.has(param.constructor.identifier))\r\n            throw new InvalidArgument(\r\n              \"Parameters must not have more than one instance supplied\"\r\n            );\r\n          else parameterInstanceCount.add(param.constructor.identifier);\r\n        } else {\r\n          if (parameterInstanceCount.has(param.param))\r\n            throw new InvalidArgument(\r\n              \"Parameters must not have more than one instance supplied\"\r\n            );\r\n          else parameterInstanceCount.add(param.param);\r\n        }\r\n\r\n        if (param.constructor.identifier === \"TypeParameter\")\r\n          return !/^(?:Related|Tel)Property$/i.test(param.targetProp);\r\n        else if (param.constructor.identifier === \"ValueParameter\")\r\n          return param.value === \"text\";\r\n\r\n        return this.constructor.acceptableParamTypes.has(\r\n          param.constructor.identifier\r\n        );\r\n      })\r\n    )\r\n      throw new TypeError(\r\n        \"Some of the parameters passed are not valid parameters for FNProperty\"\r\n      );\r\n    else if (\r\n      value.constructor.identifier !== this.constructor.acceptableValTypes\r\n    )\r\n      throw new TypeError(\"Invalid type for value of FNProperty\");\r\n  }\r\n\r\n  constructor(params, val) {\r\n    super();\r\n\r\n    this.#validate(params, val);\r\n    this.#params = params;\r\n    this.#value = val;\r\n\r\n    this.checkAbstractPropertiesAndMethods();\r\n    Object.freeze(this);\r\n  }\r\n}\r\n\r\nObject.freeze(FNProperty);\r\n"],"names":["_params","WeakMap","_value","_FNProperty_brand","WeakSet","FNProperty","_BaseProperty","params","val","_this","_classCallCheck","_callSuper","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_assertClassBrand","_validate","call","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_inherits","_createClass","key","get","_classPrivateFieldGet","reduce","parametersArray","currentParameter","push","repr","join","accumulatedParameters","reprXML","_objectSpread","reprJSON","BaseProperty","value","_this2","MissingArgument","Array","isArray","InvalidArgument","parameterInstanceCount","Set","every","param","constructor","identifier","has","add","test","targetProp","acceptableParamTypes","TypeError","acceptableValTypes","_defineProperty"],"mappings":";;;;;AACsE,IAAAA,OAAA,oBAAAC,OAAA,EAAA,CAAA;AAAA,IAAAC,MAAA,oBAAAD,OAAA,EAAA,CAAA;AAAA,IAAAE,iBAAA,oBAAAC,OAAA,EAAA,CAAA;AAEzDC,IAAAA,UAAU,0BAAAC,aAAA,EAAA;AAyGrB,EAAA,SAAAD,UAAYE,CAAAA,QAAM,EAAEC,GAAG,EAAE;AAAA,IAAA,IAAAC,KAAA,CAAA;AAAAC,IAAAA,eAAA,OAAAL,UAAA,CAAA,CAAA;IACvBI,KAAA,GAAAE,UAAA,CAAA,IAAA,EAAAN,UAAA,CAAA,CAAA;IAAQO,2BAAA,CAAAH,KAAA,EAAAN,iBAAA,CAAA,CAAA;IA1FVU,0BAAA,CAAAJ,KAAA,EAAAT,OAAO,EAAA,KAAA,CAAA,CAAA,CAAA;IACPa,0BAAA,CAAAJ,KAAA,EAAAP,MAAM,EAAA,KAAA,CAAA,CAAA,CAAA;AA2FJY,IAAAA,iBAAA,CAAAX,iBAAA,EAAAM,KAAA,EAAKM,SAAQ,CAAC,CAAAC,IAAA,CAAAP,KAAA,EAACF,QAAM,EAAEC,GAAG,CAAA,CAAA;AAC1BS,IAAAA,sBAAA,CAAKjB,OAAO,EAAAS,KAAA,EAAGF,QAAJ,CAAC,CAAA;AACZU,IAAAA,sBAAA,CAAKf,MAAM,EAAAO,KAAA,EAAGD,GAAJ,CAAC,CAAA;IAEXC,KAAA,CAAKS,iCAAiC,EAAE,CAAA;AACxCC,IAAAA,MAAM,CAACC,MAAM,CAAAX,KAAK,CAAC,CAAA;AAAC,IAAA,OAAAA,KAAA,CAAA;AACtB,GAAA;EAACY,SAAA,CAAAhB,UAAA,EAAAC,aAAA,CAAA,CAAA;EAAA,OAAAgB,YAAA,CAAAjB,UAAA,EAAA,CAAA;IAAAkB,GAAA,EAAA,QAAA;IAAAC,GAAA,EA/FD,SAAAA,GAAAA,GAAa;AACX,MAAA,OAAOC,sBAAA,CAAKzB,OAAO,EAAZ,IAAW,CAAC,CAChB0B,MAAM,CAAC,UAACC,eAAe,EAAEC,gBAAgB,EAAK;QAC7CD,eAAe,CAACE,IAAI,CAACD,gBAAgB,CAACE,IAAI,EAAE,CAAC,CAAA;AAC7C,QAAA,OAAOH,eAAe,CAAA;AACxB,OAAC,EAAE,EAAE,CAAC,CACLI,IAAI,CAAC,GAAG,CAAC,CAAA;AACd,KAAA;AAAC,GAAA,EAAA;IAAAR,GAAA,EAAA,WAAA;IAAAC,GAAA,EAED,SAAAA,GAAAA,GAAgB;AACd,MAAA,OAAOC,sBAAA,CAAKzB,OAAO,EAAZ,IAAW,CAAC,CAAC0B,MAAM,CACxB,UAACM,qBAAqB,EAAEJ,gBAAgB,EAAA;AAAA,QAAA,OACtCI,qBAAqB,GAAGJ,gBAAgB,CAACK,OAAO,EAAE,CAAA;AAAA,OAAA,EACpD,EACF,CAAC,CAAA;AACH,KAAA;AAAC,GAAA,EAAA;IAAAV,GAAA,EAAA,YAAA;IAAAC,GAAA,EAED,SAAAA,GAAAA,GAAiB;AACf,MAAA,OAAOC,sBAAA,CAAKzB,OAAO,EAAZ,IAAW,CAAC,CAAC0B,MAAM,CACxB,UAACM,qBAAqB,EAAEJ,gBAAgB,EAAA;QAAA,OAAAM,cAAA,CAAAA,cAAA,CACnCN,EAAAA,EAAAA,gBAAgB,CAACO,QAAQ,EAAE,CAAA,EAC3BH,qBAAqB,CAAA,CAAA;OACxB,EACF,EACF,CAAC,CAAA;AACH,KAAA;AAAC,GAAA,EAAA;IAAAT,GAAA,EAAA,OAAA;IAAAC,GAAA,EAED,SAAAA,GAAAA,GAAY;MACV,OAAOC,sBAAA,CAAKvB,MAAM,EAAX,IAAU,CAAC,CAAC4B,IAAI,EAAE,CAAA;AAC3B,KAAA;AAAC,GAAA,EAAA;IAAAP,GAAA,EAAA,UAAA;IAAAC,GAAA,EAED,SAAAA,GAAAA,GAAe;MACb,OAAOC,sBAAA,CAAKvB,MAAM,EAAX,IAAU,CAAC,CAAC+B,OAAO,EAAE,CAAA;AAC9B,KAAA;AAAC,GAAA,EAAA;IAAAV,GAAA,EAAA,WAAA;IAAAC,GAAA,EAED,SAAAA,GAAAA,GAAgB;MACd,OAAOC,sBAAA,CAAKvB,MAAM,EAAX,IAAU,CAAC,CAACiC,QAAQ,EAAE,CAAA;AAC/B,KAAA;AAAC,GAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CAxD6BC,YAAY,EAAA;AAmH3C,SAAArB,SAzDWR,CAAAA,MAAM,EAAE8B,KAAK,EAAE;AAAA,EAAA,IAAAC,MAAA,GAAA,IAAA,CAAA;AACvB,EAAA,IAAI,OAAO/B,MAAM,KAAK,WAAW,IAAI,OAAO8B,KAAK,KAAK,WAAW,EAC/D,MAAM,IAAIE,eAAe,CACvB,sDACF,CAAC,CAAC,KACC,IAAI,CAACC,KAAK,CAACC,OAAO,CAAClC,MAAM,CAAC,EAC7B,MAAM,IAAImC,eAAe,CACvB,sDACF,CAAC,CAAA;AAEH,EAAA,IAAMC,sBAAsB,GAAG,IAAIC,GAAG,EAAE,CAAA;AAExC,EAAA,IACE,CAACrC,MAAM,CAACsC,KAAK,CAAC,UAACC,KAAK,EAAK;AACvB,IAAA,IAAIA,KAAK,CAACC,WAAW,CAACC,UAAU,KAAK,cAAc,EAAE;AACnD,MAAA,IAAIL,sBAAsB,CAACM,GAAG,CAACH,KAAK,CAACC,WAAW,CAACC,UAAU,CAAC,EAC1D,MAAM,IAAIN,eAAe,CACvB,0DACF,CAAC,CAAC,KACCC,sBAAsB,CAACO,GAAG,CAACJ,KAAK,CAACC,WAAW,CAACC,UAAU,CAAC,CAAA;AAC/D,KAAC,MAAM;MACL,IAAIL,sBAAsB,CAACM,GAAG,CAACH,KAAK,CAACA,KAAK,CAAC,EACzC,MAAM,IAAIJ,eAAe,CACvB,0DACF,CAAC,CAAC,KACCC,sBAAsB,CAACO,GAAG,CAACJ,KAAK,CAACA,KAAK,CAAC,CAAA;AAC9C,KAAA;AAEA,IAAA,IAAIA,KAAK,CAACC,WAAW,CAACC,UAAU,KAAK,eAAe,EAClD,OAAO,CAAC,4BAA4B,CAACG,IAAI,CAACL,KAAK,CAACM,UAAU,CAAC,CAAC,KACzD,IAAIN,KAAK,CAACC,WAAW,CAACC,UAAU,KAAK,gBAAgB,EACxD,OAAOF,KAAK,CAACT,KAAK,KAAK,MAAM,CAAA;AAE/B,IAAA,OAAOC,MAAI,CAACS,WAAW,CAACM,oBAAoB,CAACJ,GAAG,CAC9CH,KAAK,CAACC,WAAW,CAACC,UACpB,CAAC,CAAA;AACH,GAAC,CAAC,EAEF,MAAM,IAAIM,SAAS,CACjB,uEACF,CAAC,CAAC,KACC,IACHjB,KAAK,CAACU,WAAW,CAACC,UAAU,KAAK,IAAI,CAACD,WAAW,CAACQ,kBAAkB,EAEpE,MAAM,IAAID,SAAS,CAAC,sCAAsC,CAAC,CAAA;AAC/D,CAAA;AAACE,eAAA,CAvGUnD,UAAU,EAAA,YAAA,EACD,YAAY,CAAA,CAAA;AAAAmD,eAAA,CADrBnD,UAAU,EAAA,MAAA,EAEP,IAAI,CAAA,CAAA;AAAAmD,eAAA,CAFPnD,UAAU,EAAA,aAAA,EAGA,IAAI,CAAA,CAAA;AAAAmD,eAAA,CAHdnD,UAAU,EAIS,sBAAA,EAAA,IAAIuC,GAAG,CAAC,CACpC,gBAAgB,EAChB,eAAe,EACf,mBAAmB,EACnB,gBAAgB,EAChB,cAAc,EACd,eAAe,EACf,gBAAgB,EAChB,cAAc,CACf,CAAC,CAAA,CAAA;AAAAY,eAAA,CAbSnD,UAAU,EAAA,oBAAA,EAcO,UAAU,CAAA,CAAA;AAuGxCc,MAAM,CAACC,MAAM,CAACf,UAAU,CAAC;;;;"}