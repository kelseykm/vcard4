{"version":3,"file":"SoundProperty.js","sources":["../../../src/properties/SoundProperty.js"],"sourcesContent":["import { BaseProperty } from \"./BaseProperty.js\";\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\n\nexport class SoundProperty extends BaseProperty {\n  static identifier = \"SoundProperty\";\n  static prop = \"SOUND\";\n  static cardinality = \"*\";\n  static acceptableParamTypes = new Set([\n    \"ValueParameter\",\n    \"LanguageParameter\",\n    \"PIDParameter\",\n    \"PrefParameter\",\n    \"IndexParameter\",\n    \"TypeParameter\",\n    \"MediatypeParameter\",\n    \"AltidParameter\",\n    \"AnyParameter\",\n  ]);\n  static acceptableValTypes = \"URIType\";\n\n  #params;\n  #value;\n\n  get params() {\n    return this.#params\n      .reduce((parametersArray, currentParameter) => {\n        parametersArray.push(currentParameter.repr());\n        return parametersArray;\n      }, [])\n      .join(\";\");\n  }\n\n  get paramsXML() {\n    return this.#params.reduce(\n      (accumulatedParameters, currentParameter) =>\n        accumulatedParameters + currentParameter.reprXML(),\n      \"\"\n    );\n  }\n\n  get paramsJSON() {\n    return this.#params.reduce(\n      (accumulatedParameters, currentParameter) => ({\n        ...currentParameter.reprJSON(),\n        ...accumulatedParameters,\n      }),\n      {}\n    );\n  }\n\n  get value() {\n    return this.#value.repr();\n  }\n\n  get valueXML() {\n    return this.#value.reprXML();\n  }\n\n  get valueJSON() {\n    return this.#value.reprJSON();\n  }\n\n  #validate(params, value) {\n    if (typeof params === \"undefined\" || typeof value === \"undefined\")\n      throw new MissingArgument(\n        \"Parameters and value for SoundProperty must be supplied\"\n      );\n    else if (!Array.isArray(params))\n      throw new InvalidArgument(\n        \"Parameters for SoundProperty must be passed in an array\"\n      );\n\n    const parameterInstanceCount = new Set();\n\n    if (\n      !params.every((param) => {\n        if (param.constructor.identifier !== \"AnyParameter\") {\n          if (parameterInstanceCount.has(param.constructor.identifier))\n            throw new InvalidArgument(\n              \"Parameters must not have more than one instance supplied\"\n            );\n          else parameterInstanceCount.add(param.constructor.identifier);\n        } else {\n          if (parameterInstanceCount.has(param.param))\n            throw new InvalidArgument(\n              \"Parameters must not have more than one instance supplied\"\n            );\n          else parameterInstanceCount.add(param.param);\n        }\n\n        if (param.constructor.identifier === \"TypeParameter\")\n          return !/^(?:Related|Tel)Property$/i.test(param.targetProp);\n        else if (param.constructor.identifier === \"ValueParameter\")\n          return param.value === \"uri\";\n\n        return this.constructor.acceptableParamTypes.has(\n          param.constructor.identifier\n        );\n      })\n    )\n      throw new TypeError(\n        \"Some of the parameters passed are not valid parameters for SoundProperty\"\n      );\n    else if (\n      value.constructor.identifier !== this.constructor.acceptableValTypes\n    )\n      throw new TypeError(\"Invalid type for value of SoundProperty\");\n  }\n\n  constructor(params, val) {\n    super();\n\n    this.#validate(params, val);\n    this.#params = params;\n    this.#value = val;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(SoundProperty);\n"],"names":["_params","WeakMap","_value","_validate","WeakSet","SoundProperty","_BaseProperty","_inherits","_super","_createSuper","params","val","_this","_classCallCheck","call","_classPrivateMethodInitSpec","_assertThisInitialized","_classPrivateFieldInitSpec","writable","value","_classPrivateMethodGet","_validate2","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_createClass","key","get","_classPrivateFieldGet","reduce","parametersArray","currentParameter","push","repr","join","accumulatedParameters","reprXML","_objectSpread","reprJSON","BaseProperty","_this2","MissingArgument","Array","isArray","InvalidArgument","parameterInstanceCount","Set","every","param","constructor","identifier","has","add","test","targetProp","acceptableParamTypes","TypeError","acceptableValTypes","_defineProperty"],"mappings":"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"}