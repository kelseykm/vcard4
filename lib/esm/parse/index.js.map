{"version":3,"file":"index.js","sources":["../../../src/parse/index.js"],"sourcesContent":["import { MissingArgument } from \"../errors/index.js\";\nimport { Tokenizer } from \"./Tokenizer.js\";\nimport { Parser } from \"./Parser.js\";\n\nexport function parse(vcard) {\n  if (typeof vcard === \"undefined\")\n    throw new MissingArgument(\"vCard to be parsed must be supplied\");\n  else if (typeof vcard !== \"string\")\n    throw new TypeError(\"vCard to be parsed must be of type string\");\n\n  const tokenizedVcard = new Tokenizer(vcard);\n\n  if (tokenizedVcard.numberOfVcards === 1)\n    return new Parser(tokenizedVcard.tokens).parsed;\n\n  const _tokenizedVcards = [];\n  for (const tokenVcard of tokenizedVcard.tokens)\n    _tokenizedVcards.push(new Parser(tokenVcard).parsed);\n  return _tokenizedVcards;\n}\n"],"names":["parse","vcard","MissingArgument","TypeError","tokenizedVcard","Tokenizer","numberOfVcards","Parser","tokens","parsed","_tokenizedVcards","_iterator","_createForOfIteratorHelper","_step","s","n","done","tokenVcard","value","push","err","e","f"],"mappings":";;;;;AAIO,SAASA,KAAKA,CAACC,KAAK,EAAE;EAC3B,IAAI,OAAOA,KAAK,KAAK,WAAW,EAC9B,MAAM,IAAIC,eAAe,CAAC,qCAAqC,CAAC,CAAC,KAC9D,IAAI,OAAOD,KAAK,KAAK,QAAQ,EAChC,MAAM,IAAIE,SAAS,CAAC,2CAA2C,CAAC,CAAA;AAElE,EAAA,IAAMC,cAAc,GAAG,IAAIC,SAAS,CAACJ,KAAK,CAAC,CAAA;AAE3C,EAAA,IAAIG,cAAc,CAACE,cAAc,KAAK,CAAC,EACrC,OAAO,IAAIC,MAAM,CAACH,cAAc,CAACI,MAAM,CAAC,CAACC,MAAM,CAAA;EAEjD,IAAMC,gBAAgB,GAAG,EAAE,CAAA;AAAC,EAAA,IAAAC,SAAA,GAAAC,0BAAA,CACHR,cAAc,CAACI,MAAM,CAAA;IAAAK,KAAA,CAAA;AAAA,EAAA,IAAA;IAA9C,KAAAF,SAAA,CAAAG,CAAA,EAAAD,EAAAA,CAAAA,CAAAA,KAAA,GAAAF,SAAA,CAAAI,CAAA,EAAAC,EAAAA,IAAA,GACE;AAAA,MAAA,IADSC,UAAU,GAAAJ,KAAA,CAAAK,KAAA,CAAA;MACnBR,gBAAgB,CAACS,IAAI,CAAC,IAAIZ,MAAM,CAACU,UAAU,CAAC,CAACR,MAAM,CAAC,CAAA;AAAA,KAAA;AAAC,GAAA,CAAA,OAAAW,GAAA,EAAA;IAAAT,SAAA,CAAAU,CAAA,CAAAD,GAAA,CAAA,CAAA;AAAA,GAAA,SAAA;AAAAT,IAAAA,SAAA,CAAAW,CAAA,EAAA,CAAA;AAAA,GAAA;AACvD,EAAA,OAAOZ,gBAAgB,CAAA;AACzB;;;;"}