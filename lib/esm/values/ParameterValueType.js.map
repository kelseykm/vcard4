{"version":3,"file":"ParameterValueType.js","sources":["../../../src/values/ParameterValueType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\r\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\r\n\r\nexport class ParameterValueType extends BaseValue {\r\n  static type = \"TEXT\";\r\n  static identifier = \"ParameterValueType\";\r\n\r\n  #parameterValue;\r\n\r\n  #validate(parameterValue) {\r\n    if (typeof parameterValue === \"undefined\" || parameterValue === \"\")\r\n      throw new MissingArgument(\r\n        \"Value for ParameterValueType must be supplied\"\r\n      );\r\n    else if (typeof parameterValue !== \"string\")\r\n      throw new TypeError(\r\n        \"Only type string allowed for ParameterValueType value\"\r\n      );\r\n    else if (/[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]/.test(parameterValue)) {\r\n      throw new InvalidArgument(\"Value includes forbidden characters\");\r\n    }\r\n  }\r\n\r\n  #cleanUp(parameterValue) {\r\n    return parameterValue\r\n      .replaceAll(\"^\", \"^^\")\r\n      .replaceAll(\"\\n\", \"^n\")\r\n      .replaceAll('\"', \"^â€™\");\r\n  }\r\n\r\n  #cleanUpXML(parameterValue) {\r\n    return parameterValue\r\n      .replaceAll(\"&\", \"&amp;\")\r\n      .replaceAll(\">\", \"&gt;\")\r\n      .replaceAll(\"<\", \"&lt;\")\r\n      .replaceAll('\"', \"&quot;\")\r\n      .replaceAll(\"'\", \"&apos;\");\r\n  }\r\n\r\n  get value() {\r\n    const cleanVal = this.#cleanUp(this.#parameterValue);\r\n\r\n    return /[:;]/.test(cleanVal) ? `\"${cleanVal}\"` : cleanVal;\r\n  }\r\n\r\n  get valueXML() {\r\n    return `<${this.constructor.type.toLowerCase()}>${this.#cleanUpXML(\r\n      this.#parameterValue\r\n    )}</${this.constructor.type.toLowerCase()}>`;\r\n  }\r\n\r\n  get valueJSON() {\r\n    return [this.constructor.type.toLowerCase(), this.#parameterValue];\r\n  }\r\n\r\n  get _unsafe_raw_value() {\r\n    return this.#parameterValue;\r\n  }\r\n\r\n  constructor(parameterValue) {\r\n    super();\r\n    this.#validate(parameterValue);\r\n    this.#parameterValue = parameterValue;\r\n\r\n    this.checkAbstractPropertiesAndMethods();\r\n    Object.freeze(this);\r\n  }\r\n}\r\n\r\nObject.freeze(ParameterValueType);\r\n"],"names":["_parameterValue","WeakMap","_ParameterValueType_brand","WeakSet","ParameterValueType","_BaseValue","parameterValue","_this","_classCallCheck","_callSuper","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_assertClassBrand","_validate","call","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_inherits","_createClass","key","get","cleanVal","_cleanUp","_classPrivateFieldGet","test","concat","constructor","type","toLowerCase","_cleanUpXML","BaseValue","MissingArgument","TypeError","InvalidArgument","replaceAll","_defineProperty"],"mappings":"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"}