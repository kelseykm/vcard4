{"version":3,"file":"FloatType.js","sources":["../../../src/values/FloatType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\nimport { MissingArgument } from \"../errors/index.js\";\n\nexport class FloatType extends BaseValue {\n  static type = \"FLOAT\";\n  static identifier = \"FloatType\";\n\n  #floatValue;\n\n  #validate(floatValue) {\n    if (typeof floatValue === \"undefined\")\n      throw new MissingArgument(\"Value for FloatType must be supplied\");\n\n    if (\n      (!(typeof floatValue === \"number\") && !/\\./.test(floatValue)) ||\n      !/^[-+]?\\d+\\.\\d+$/.test(floatValue)\n    )\n      throw new TypeError(\"Invalid value for FloatType\");\n  }\n\n  get value() {\n    return `${this.#floatValue}`;\n  }\n\n  get valueXML() {\n    return `<${this.constructor.type.toLowerCase()}>${\n      this.#floatValue\n    }</${this.constructor.type.toLowerCase()}>`;\n  }\n\n  get valueJSON() {\n    return [this.constructor.type.toLowerCase(), this.#floatValue];\n  }\n\n  constructor(floatValue) {\n    super();\n\n    this.#validate(floatValue);\n    this.#floatValue = floatValue;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(FloatType);\n"],"names":["_floatValue","WeakMap","_validate","WeakSet","FloatType","_BaseValue","_inherits","_super","_createSuper","floatValue","_this","_classCallCheck","call","_classPrivateMethodInitSpec","_assertThisInitialized","_classPrivateFieldInitSpec","writable","value","_classPrivateMethodGet","_validate2","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_createClass","key","get","concat","_classPrivateFieldGet","constructor","type","toLowerCase","BaseValue","MissingArgument","test","TypeError","_defineProperty"],"mappings":"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"}