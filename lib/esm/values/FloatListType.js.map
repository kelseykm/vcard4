{"version":3,"file":"FloatListType.js","sources":["../../../src/values/FloatListType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\r\nimport { MissingArgument } from \"../errors/index.js\";\r\n\r\nexport class FloatListType extends BaseValue {\r\n  static type = \"FLOAT\";\r\n  static identifier = \"FloatListType\";\r\n\r\n  #floatlist;\r\n\r\n  get value() {\r\n    return this.#floatlist\r\n      .reduce((accumulatedFloatTypes, currentFloatType) => {\r\n        accumulatedFloatTypes.push(currentFloatType.repr());\r\n        return accumulatedFloatTypes;\r\n      }, [])\r\n      .join(\",\");\r\n  }\r\n\r\n  get valueXML() {\r\n    return this.#floatlist.reduce(\r\n      (accumulatedFloatTypes, currentFloatType) =>\r\n        accumulatedFloatTypes + currentFloatType.reprXML(),\r\n      \"\"\r\n    );\r\n  }\r\n\r\n  get valueJSON() {\r\n    const value = this.#floatlist.reduce(\r\n      (accumulatedFloatTypes, currentFloatType) => {\r\n        accumulatedFloatTypes.push(currentFloatType.reprJSON().pop());\r\n        return accumulatedFloatTypes;\r\n      },\r\n      []\r\n    );\r\n\r\n    value.unshift(this.constructor.type.toLowerCase());\r\n\r\n    return value;\r\n  }\r\n\r\n  #validate(floatlist) {\r\n    if (typeof floatlist === \"undefined\")\r\n      throw new MissingArgument(\"Value for FloatListType must be supplied\");\r\n    else if (!Array.isArray(floatlist))\r\n      throw new TypeError(\r\n        \"Value of FloatListType should be passed in an array\"\r\n      );\r\n\r\n    for (const float of floatlist) {\r\n      if (float.constructor.identifier !== \"FloatType\")\r\n        throw new TypeError(\r\n          \"Value of FloatListType should be an array of FloatTypes\"\r\n        );\r\n    }\r\n  }\r\n\r\n  constructor(floatlist) {\r\n    super();\r\n\r\n    this.#validate(floatlist);\r\n    this.#floatlist = floatlist;\r\n\r\n    this.checkAbstractPropertiesAndMethods();\r\n    Object.freeze(this);\r\n  }\r\n}\r\n\r\nObject.freeze(FloatListType);\r\n"],"names":["_floatlist","WeakMap","_FloatListType_brand","WeakSet","FloatListType","_BaseValue","floatlist","_this","_classCallCheck","_callSuper","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_assertClassBrand","_validate","call","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_inherits","_createClass","key","get","_classPrivateFieldGet","reduce","accumulatedFloatTypes","currentFloatType","push","repr","join","reprXML","value","reprJSON","pop","unshift","constructor","type","toLowerCase","BaseValue","MissingArgument","Array","isArray","TypeError","_iterator","_createForOfIteratorHelper","_step","s","n","done","float","identifier","err","e","f","_defineProperty"],"mappings":"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"}