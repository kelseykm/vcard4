{"version":3,"file":"TextListType.js","sources":["../../../src/values/TextListType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\nimport { MissingArgument } from \"../errors/index.js\";\n\nexport class TextListType extends BaseValue {\n  static type = \"TEXT\";\n  static identifier = \"TextListType\";\n\n  #textlist;\n\n  get value() {\n    return this.#textlist\n      .reduce((accumulatedTextTypes, currentTextType) => {\n        accumulatedTextTypes.push(currentTextType.repr());\n        return accumulatedTextTypes;\n      }, [])\n      .join(\",\");\n  }\n\n  get valueXML() {\n    return this.#textlist.reduce(\n      (accumulatedTextTypes, currentTextType) =>\n        accumulatedTextTypes + currentTextType.reprXML(),\n      \"\"\n    );\n  }\n\n  get valueJSON() {\n    const value = this.#textlist.reduce(\n      (accumulatedTextTypes, currentTextType) => {\n        accumulatedTextTypes.push(currentTextType.reprJSON().pop());\n        return accumulatedTextTypes;\n      },\n      []\n    );\n\n    value.unshift(this.constructor.type.toLowerCase());\n\n    return value;\n  }\n\n  #validate(textlist) {\n    if (typeof textlist === \"undefined\")\n      throw new MissingArgument(\"Value for TextListType must be supplied\");\n    else if (!Array.isArray(textlist))\n      throw new TypeError(\"Value for TextListType must be passed in an array\");\n\n    for (const text of textlist) {\n      if (text.constructor.identifier !== \"TextType\")\n        throw new TypeError(\n          \"Invalid type for value of TextListType. It should be an array of TextTypes\"\n        );\n    }\n  }\n\n  constructor(textlist) {\n    super();\n\n    this.#validate(textlist);\n    this.#textlist = textlist;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(TextListType);\n"],"names":["_textlist","WeakMap","_validate","WeakSet","TextListType","_BaseValue","_inherits","_super","_createSuper","textlist","_this","_classCallCheck","call","_classPrivateMethodInitSpec","_assertThisInitialized","_classPrivateFieldInitSpec","writable","value","_classPrivateMethodGet","_validate2","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_createClass","key","get","_classPrivateFieldGet","reduce","accumulatedTextTypes","currentTextType","push","repr","join","reprXML","reprJSON","pop","unshift","constructor","type","toLowerCase","BaseValue","MissingArgument","Array","isArray","TypeError","_iterator","_createForOfIteratorHelper","_step","s","n","done","text","identifier","err","e","f","_defineProperty"],"mappings":"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"}