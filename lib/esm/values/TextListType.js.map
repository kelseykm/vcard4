{"version":3,"file":"TextListType.js","sources":["../../../src/values/TextListType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\r\nimport { MissingArgument } from \"../errors/index.js\";\r\n\r\nexport class TextListType extends BaseValue {\r\n  static type = \"TEXT\";\r\n  static identifier = \"TextListType\";\r\n\r\n  #textlist;\r\n\r\n  get value() {\r\n    return this.#textlist\r\n      .reduce((accumulatedTextTypes, currentTextType) => {\r\n        accumulatedTextTypes.push(currentTextType.repr());\r\n        return accumulatedTextTypes;\r\n      }, [])\r\n      .join(\",\");\r\n  }\r\n\r\n  get valueXML() {\r\n    return this.#textlist.reduce(\r\n      (accumulatedTextTypes, currentTextType) =>\r\n        accumulatedTextTypes + currentTextType.reprXML(),\r\n      \"\"\r\n    );\r\n  }\r\n\r\n  get valueJSON() {\r\n    const value = this.#textlist.reduce(\r\n      (accumulatedTextTypes, currentTextType) => {\r\n        accumulatedTextTypes.push(currentTextType.reprJSON().pop());\r\n        return accumulatedTextTypes;\r\n      },\r\n      []\r\n    );\r\n\r\n    value.unshift(this.constructor.type.toLowerCase());\r\n\r\n    return value;\r\n  }\r\n\r\n  #validate(textlist) {\r\n    if (typeof textlist === \"undefined\")\r\n      throw new MissingArgument(\"Value for TextListType must be supplied\");\r\n    else if (!Array.isArray(textlist))\r\n      throw new TypeError(\"Value for TextListType must be passed in an array\");\r\n\r\n    for (const text of textlist) {\r\n      if (text.constructor.identifier !== \"TextType\")\r\n        throw new TypeError(\r\n          \"Invalid type for value of TextListType. It should be an array of TextTypes\"\r\n        );\r\n    }\r\n  }\r\n\r\n  constructor(textlist) {\r\n    super();\r\n\r\n    this.#validate(textlist);\r\n    this.#textlist = textlist;\r\n\r\n    this.checkAbstractPropertiesAndMethods();\r\n    Object.freeze(this);\r\n  }\r\n}\r\n\r\nObject.freeze(TextListType);\r\n"],"names":["_textlist","WeakMap","_TextListType_brand","WeakSet","TextListType","_BaseValue","textlist","_this","_classCallCheck","_callSuper","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_assertClassBrand","_validate","call","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_inherits","_createClass","key","get","_classPrivateFieldGet","reduce","accumulatedTextTypes","currentTextType","push","repr","join","reprXML","value","reprJSON","pop","unshift","constructor","type","toLowerCase","BaseValue","MissingArgument","Array","isArray","TypeError","_iterator","_createForOfIteratorHelper","_step","s","n","done","text","identifier","err","e","f","_defineProperty"],"mappings":"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"}