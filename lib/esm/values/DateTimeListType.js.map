{"version":3,"file":"DateTimeListType.js","sources":["../../../src/values/DateTimeListType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\r\nimport { MissingArgument } from \"../errors/index.js\";\r\n\r\nexport class DateTimeListType extends BaseValue {\r\n  static identifier = \"DateTimeListType\";\r\n\r\n  #datetimelist;\r\n\r\n  get value() {\r\n    return this.#datetimelist\r\n      .reduce((accumulatedDateTimeTypes, currentDateTimeType) => {\r\n        accumulatedDateTimeTypes.push(currentDateTimeType.repr());\r\n        return accumulatedDateTimeTypes;\r\n      }, [])\r\n      .join(\",\");\r\n  }\r\n\r\n  get valueXML() {\r\n    return this.#datetimelist.reduce(\r\n      (accumulatedDateTimeTypes, currentDateTimeType) =>\r\n        accumulatedDateTimeTypes + currentDateTimeType.reprXML(),\r\n      \"\"\r\n    );\r\n  }\r\n\r\n  get valueJSON() {\r\n    const value = this.#datetimelist.reduce(\r\n      (accumulatedIntegerTypes, currentIntegerType) => {\r\n        accumulatedIntegerTypes.push(currentIntegerType.reprJSON().pop());\r\n        return accumulatedIntegerTypes;\r\n      },\r\n      []\r\n    );\r\n\r\n    value.unshift(this.type.toLowerCase());\r\n\r\n    return value;\r\n  }\r\n\r\n  #validate(datetimelist) {\r\n    if (typeof datetimelist === \"undefined\")\r\n      throw new MissingArgument(\"Value for DateTimeListType must be supplied\");\r\n    else if (!Array.isArray(datetimelist))\r\n      throw new TypeError(\r\n        \"Value for DateTimeListType should be passed in an array\"\r\n      );\r\n\r\n    const conformType = datetimelist[0][\"type\"];\r\n\r\n    for (const datetime of datetimelist) {\r\n      if (datetime.type !== conformType)\r\n        throw new TypeError(\r\n          \"Value for DateTimeListType should be an array of DateTimeTypes of the same type\"\r\n        );\r\n      else if (datetime.type === \"UTC-OFFSET\")\r\n        throw new TypeError(\"Invalid type for value of DateTimeListType\");\r\n      else if (datetime.constructor.identifier !== \"DateTimeType\")\r\n        throw new TypeError(\r\n          \"Value for DateTimeListType should be an array of DateTimeTypes\"\r\n        );\r\n    }\r\n  }\r\n\r\n  constructor(datetimelist) {\r\n    super();\r\n\r\n    this.#validate(datetimelist);\r\n    this.#datetimelist = datetimelist;\r\n    this.type = datetimelist[0][\"type\"];\r\n\r\n    this.checkAbstractPropertiesAndMethods();\r\n    Object.freeze(this);\r\n  }\r\n}\r\n\r\nObject.freeze(DateTimeListType);\r\n"],"names":["_datetimelist","WeakMap","_DateTimeListType_brand","WeakSet","DateTimeListType","_BaseValue","datetimelist","_this","_classCallCheck","_callSuper","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_assertClassBrand","_validate","call","_classPrivateFieldSet","type","checkAbstractPropertiesAndMethods","Object","freeze","_inherits","_createClass","key","get","_classPrivateFieldGet","reduce","accumulatedDateTimeTypes","currentDateTimeType","push","repr","join","reprXML","value","accumulatedIntegerTypes","currentIntegerType","reprJSON","pop","unshift","toLowerCase","BaseValue","MissingArgument","Array","isArray","TypeError","conformType","_iterator","_createForOfIteratorHelper","_step","s","n","done","datetime","constructor","identifier","err","e","f","_defineProperty"],"mappings":"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"}