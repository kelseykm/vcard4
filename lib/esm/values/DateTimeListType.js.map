{"version":3,"file":"DateTimeListType.js","sources":["../../../src/values/DateTimeListType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\nimport { MissingArgument } from \"../errors/index.js\";\n\nexport class DateTimeListType extends BaseValue {\n  static identifier = \"DateTimeListType\";\n\n  #datetimelist;\n\n  get value() {\n    return this.#datetimelist\n      .reduce((accumulatedDateTimeTypes, currentDateTimeType) => {\n        accumulatedDateTimeTypes.push(currentDateTimeType.repr());\n        return accumulatedDateTimeTypes;\n      }, [])\n      .join(\",\");\n  }\n\n  get valueXML() {\n    return this.#datetimelist.reduce(\n      (accumulatedDateTimeTypes, currentDateTimeType) =>\n        accumulatedDateTimeTypes + currentDateTimeType.reprXML(),\n      \"\"\n    );\n  }\n\n  get valueJSON() {\n    const value = this.#datetimelist.reduce(\n      (accumulatedIntegerTypes, currentIntegerType) => {\n        accumulatedIntegerTypes.push(currentIntegerType.reprJSON().pop());\n        return accumulatedIntegerTypes;\n      },\n      []\n    );\n\n    value.unshift(this.type.toLowerCase());\n\n    return value;\n  }\n\n  #validate(datetimelist) {\n    if (typeof datetimelist === \"undefined\")\n      throw new MissingArgument(\"Value for DateTimeListType must be supplied\");\n    else if (!Array.isArray(datetimelist))\n      throw new TypeError(\n        \"Value for DateTimeListType should be passed in an array\"\n      );\n\n    const conformType = datetimelist[0][\"type\"];\n\n    for (const datetime of datetimelist) {\n      if (datetime.type !== conformType)\n        throw new TypeError(\n          \"Value for DateTimeListType should be an array of DateTimeTypes of the same type\"\n        );\n      else if (datetime.type === \"UTC-OFFSET\")\n        throw new TypeError(\"Invalid type for value of DateTimeListType\");\n      else if (datetime.constructor.identifier !== \"DateTimeType\")\n        throw new TypeError(\n          \"Value for DateTimeListType should be an array of DateTimeTypes\"\n        );\n    }\n  }\n\n  constructor(datetimelist) {\n    super();\n\n    this.#validate(datetimelist);\n    this.#datetimelist = datetimelist;\n    this.type = datetimelist[0][\"type\"];\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(DateTimeListType);\n"],"names":["_datetimelist","WeakMap","_validate","WeakSet","DateTimeListType","_BaseValue","_inherits","_super","_createSuper","datetimelist","_this","_classCallCheck","call","_classPrivateMethodInitSpec","_assertThisInitialized","_classPrivateFieldInitSpec","writable","value","_classPrivateMethodGet","_validate2","_classPrivateFieldSet","type","checkAbstractPropertiesAndMethods","Object","freeze","_createClass","key","get","_classPrivateFieldGet","reduce","accumulatedDateTimeTypes","currentDateTimeType","push","repr","join","reprXML","accumulatedIntegerTypes","currentIntegerType","reprJSON","pop","unshift","toLowerCase","BaseValue","MissingArgument","Array","isArray","TypeError","conformType","_iterator","_createForOfIteratorHelper","_step","s","n","done","datetime","constructor","identifier","err","e","f","_defineProperty"],"mappings":"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"}