{"version":3,"file":"SpecialValueType.js","sources":["../../../src/values/SpecialValueType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\r\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\r\n\r\nexport class SpecialValueType extends BaseValue {\r\n  static identifier = \"SpecialValueType\";\r\n  static type = \"TEXT\";\r\n\r\n  #validateAndSet(targetProp, value) {\r\n    if (typeof value === \"undefined\" || typeof targetProp === \"undefined\")\r\n      throw new MissingArgument(\r\n        \"Value and target property for SpecialValueType must be supplied\"\r\n      );\r\n\r\n    const valueRegExp =\r\n      /^(?:individual|group|org|location|application|x-[a-z0-9-]+)$/i;\r\n\r\n    let valueCopy;\r\n    let _tempValue;\r\n\r\n    switch (true) {\r\n      case /^KindProperty$/i.test(targetProp):\r\n        if (typeof value !== \"string\" || !valueRegExp.test(value))\r\n          throw new InvalidArgument(\r\n            \"Invalid value for SpecialValueType for KindProperty\"\r\n          );\r\n\r\n        this.value = value;\r\n        this.valueXML = `<text>${value}</text>`;\r\n        this.valueJSON = [this.constructor.type.toLowerCase(), value];\r\n\r\n        break;\r\n      case /^NProperty$/i.test(targetProp):\r\n        if (!Array.isArray(value) || value.length !== 5)\r\n          throw new InvalidArgument(\r\n            \"Invalid value for SpecialValueType for NProperty. It should be an array with a length of 5\"\r\n          );\r\n\r\n        for (let index = 0; index < value.length; index++)\r\n          if (value[index])\r\n            if (\r\n              value[index].constructor.identifier !== \"TextType\" &&\r\n              value[index].constructor.identifier !== \"TextListType\"\r\n            )\r\n              throw new TypeError(\r\n                \"Invalid value for SpecialValueType for NProperty. The items in the array, if present, should be of type TextType or TextListType\"\r\n              );\r\n\r\n        valueCopy = [...value];\r\n\r\n        for (let index = 0; index < valueCopy.length; index++)\r\n          if (valueCopy[index]) valueCopy[index] = valueCopy[index].repr();\r\n\r\n        this.value = valueCopy.join(\";\");\r\n        this.valueXML = \"\";\r\n        this.valueJSON = [];\r\n\r\n        for (let index = 0; index < value.length; index++)\r\n          switch (index) {\r\n            case 0:\r\n              if (!value[index]) {\r\n                this.valueXML += \"<surname/>\";\r\n                this.valueJSON[index] = \"\";\r\n              } else {\r\n                this.valueXML += value[index]\r\n                  .reprXML()\r\n                  .replaceAll(\"text>\", \"surname>\");\r\n\r\n                _tempValue = value[index].reprJSON();\r\n                if (_tempValue.length === 2)\r\n                  this.valueJSON[index] = _tempValue.pop();\r\n                else {\r\n                  _tempValue.shift();\r\n                  this.valueJSON[index] = _tempValue;\r\n                }\r\n              }\r\n\r\n              break;\r\n            case 1:\r\n              if (!value[index]) {\r\n                this.valueXML += \"<given/>\";\r\n                this.valueJSON[index] = \"\";\r\n              } else {\r\n                this.valueXML += value[index]\r\n                  .reprXML()\r\n                  .replaceAll(\"text>\", \"given>\");\r\n\r\n                _tempValue = value[index].reprJSON();\r\n                if (_tempValue.length === 2)\r\n                  this.valueJSON[index] = _tempValue.pop();\r\n                else {\r\n                  _tempValue.shift();\r\n                  this.valueJSON[index] = _tempValue;\r\n                }\r\n              }\r\n\r\n              break;\r\n            case 2:\r\n              if (!value[index]) {\r\n                this.valueXML += \"<additional/>\";\r\n                this.valueJSON[index] = \"\";\r\n              } else {\r\n                this.valueXML += value[index]\r\n                  .reprXML()\r\n                  .replaceAll(\"text>\", \"additional>\");\r\n\r\n                _tempValue = value[index].reprJSON();\r\n                if (_tempValue.length === 2)\r\n                  this.valueJSON[index] = _tempValue.pop();\r\n                else {\r\n                  _tempValue.shift();\r\n                  this.valueJSON[index] = _tempValue;\r\n                }\r\n              }\r\n\r\n              break;\r\n            case 3:\r\n              if (!value[index]) {\r\n                this.valueXML += \"<prefix/>\";\r\n                this.valueJSON[index] = \"\";\r\n              } else {\r\n                this.valueXML += value[index]\r\n                  .reprXML()\r\n                  .replaceAll(\"text>\", \"prefix>\");\r\n\r\n                _tempValue = value[index].reprJSON();\r\n                if (_tempValue.length === 2)\r\n                  this.valueJSON[index] = _tempValue.pop();\r\n                else {\r\n                  _tempValue.shift();\r\n                  this.valueJSON[index] = _tempValue;\r\n                }\r\n              }\r\n\r\n              break;\r\n            case 4:\r\n              if (!value[index]) {\r\n                this.valueXML += \"<suffix/>\";\r\n                this.valueJSON[index] = \"\";\r\n              } else {\r\n                this.valueXML += value[index]\r\n                  .reprXML()\r\n                  .replaceAll(\"text>\", \"suffix>\");\r\n\r\n                _tempValue = value[index].reprJSON();\r\n                if (_tempValue.length === 2)\r\n                  this.valueJSON[index] = _tempValue.pop();\r\n                else {\r\n                  _tempValue.shift();\r\n                  this.valueJSON[index] = _tempValue;\r\n                }\r\n              }\r\n          }\r\n\r\n        this.valueJSON = [this.constructor.type.toLowerCase(), this.valueJSON];\r\n\r\n        break;\r\n      case /^GenderProperty$/i.test(targetProp):\r\n        if (!Array.isArray(value) || value.length !== 2)\r\n          throw new InvalidArgument(\r\n            \"Invalid value for SpecialValueType for GenderProperty. It should be an array with a length of 2\"\r\n          );\r\n        else if (value[0] && value[0].constructor.identifier !== \"SexType\")\r\n          throw new TypeError(\r\n            \"Invalid value for SpecialValueType for GenderProperty. The first item in the array, if present, should be of type SexType\"\r\n          );\r\n        else if (\r\n          (!value[0] && !value[1]) ||\r\n          (value[1] && value[1].constructor.identifier !== \"TextType\")\r\n        )\r\n          throw new TypeError(\r\n            \"Invalid value for SpecialValueType for GenderProperty. The second item in the array, if present, should be of type TextType\"\r\n          );\r\n\r\n        this.value = value.reduce((accumulated, current) => {\r\n          return accumulated\r\n            ? `${accumulated};${current.repr()}`\r\n            : current.repr();\r\n        }, \"\");\r\n\r\n        this.valueXML = value.reduce(\r\n          (accumulated, current) => accumulated + current.reprXML(),\r\n          \"\"\r\n        );\r\n\r\n        this.valueJSON = value.reduce((accumulated, current) => {\r\n          accumulated.push(current.reprJSON().pop());\r\n          return accumulated;\r\n        }, []);\r\n\r\n        if (this.valueJSON.length === 1)\r\n          this.valueJSON.unshift(this.constructor.type.toLowerCase());\r\n        else\r\n          this.valueJSON = [\r\n            this.constructor.type.toLowerCase(),\r\n            this.valueJSON,\r\n          ];\r\n\r\n        break;\r\n      case /^AdrProperty$/i.test(targetProp):\r\n        if (!Array.isArray(value) || value.length !== 7)\r\n          throw new InvalidArgument(\r\n            \"Invalid value for SpecialValueType for AdrProperty. It should be an array with a length of 7\"\r\n          );\r\n\r\n        for (let index = 0; index < value.length; index++)\r\n          if (value[index])\r\n            if (value[index].constructor.identifier !== \"TextType\")\r\n              throw new TypeError(\r\n                \"Invalid value for SpecialValueType for AdrProperty. The items in the array, if present, should be of type TextType\"\r\n              );\r\n\r\n        valueCopy = [...value];\r\n\r\n        for (let index = 0; index < valueCopy.length; index++)\r\n          if (valueCopy[index]) valueCopy[index] = valueCopy[index].repr();\r\n\r\n        this.value = valueCopy.join(\";\");\r\n        this.valueXML = \"\";\r\n        this.valueJSON = [];\r\n\r\n        for (let index = 0; index < value.length; index++)\r\n          switch (index) {\r\n            case 0:\r\n              if (!value[index]) {\r\n                this.valueXML += \"<pobox/>\";\r\n                this.valueJSON[index] = \"\";\r\n              } else {\r\n                this.valueXML += value[index]\r\n                  .reprXML()\r\n                  .replaceAll(\"text>\", \"pobox>\");\r\n\r\n                _tempValue = value[index].reprJSON();\r\n                if (_tempValue.length === 2)\r\n                  this.valueJSON[index] = _tempValue.pop();\r\n                else {\r\n                  _tempValue.shift();\r\n                  this.valueJSON[index] = _tempValue;\r\n                }\r\n              }\r\n\r\n              break;\r\n            case 1:\r\n              if (!value[index]) {\r\n                this.valueXML += \"<ext/>\";\r\n                this.valueJSON[index] = \"\";\r\n              } else {\r\n                this.valueXML += value[index]\r\n                  .reprXML()\r\n                  .replaceAll(\"text>\", \"ext>\");\r\n\r\n                _tempValue = value[index].reprJSON();\r\n                if (_tempValue.length === 2)\r\n                  this.valueJSON[index] = _tempValue.pop();\r\n                else {\r\n                  _tempValue.shift();\r\n                  this.valueJSON[index] = _tempValue;\r\n                }\r\n              }\r\n\r\n              break;\r\n            case 2:\r\n              if (!value[index]) {\r\n                this.valueXML += \"<street/>\";\r\n                this.valueJSON[index] = \"\";\r\n              } else {\r\n                this.valueXML += value[index]\r\n                  .reprXML()\r\n                  .replaceAll(\"text>\", \"street>\");\r\n\r\n                _tempValue = value[index].reprJSON();\r\n                if (_tempValue.length === 2)\r\n                  this.valueJSON[index] = _tempValue.pop();\r\n                else {\r\n                  _tempValue.shift();\r\n                  this.valueJSON[index] = _tempValue;\r\n                }\r\n              }\r\n\r\n              break;\r\n            case 3:\r\n              if (!value[index]) {\r\n                this.valueXML += \"<locality/>\";\r\n                this.valueJSON[index] = \"\";\r\n              } else {\r\n                this.valueXML += value[index]\r\n                  .reprXML()\r\n                  .replaceAll(\"text>\", \"locality>\");\r\n\r\n                _tempValue = value[index].reprJSON();\r\n                if (_tempValue.length === 2)\r\n                  this.valueJSON[index] = _tempValue.pop();\r\n                else {\r\n                  _tempValue.shift();\r\n                  this.valueJSON[index] = _tempValue;\r\n                }\r\n              }\r\n\r\n              break;\r\n            case 4:\r\n              if (!value[index]) {\r\n                this.valueXML += \"<region/>\";\r\n                this.valueJSON[index] = \"\";\r\n              } else {\r\n                this.valueXML += value[index]\r\n                  .reprXML()\r\n                  .replaceAll(\"text>\", \"region>\");\r\n\r\n                _tempValue = value[index].reprJSON();\r\n                if (_tempValue.length === 2)\r\n                  this.valueJSON[index] = _tempValue.pop();\r\n                else {\r\n                  _tempValue.shift();\r\n                  this.valueJSON[index] = _tempValue;\r\n                }\r\n              }\r\n\r\n              break;\r\n            case 5:\r\n              if (!value[index]) {\r\n                this.valueXML += \"<code/>\";\r\n                this.valueJSON[index] = \"\";\r\n              } else {\r\n                this.valueXML += value[index]\r\n                  .reprXML()\r\n                  .replaceAll(\"text>\", \"code>\");\r\n\r\n                _tempValue = value[index].reprJSON();\r\n                if (_tempValue.length === 2)\r\n                  this.valueJSON[index] = _tempValue.pop();\r\n                else {\r\n                  _tempValue.shift();\r\n                  this.valueJSON[index] = _tempValue;\r\n                }\r\n              }\r\n\r\n              break;\r\n            case 6:\r\n              if (!value[index]) {\r\n                this.valueXML += \"<country/>\";\r\n                this.valueJSON[index] = \"\";\r\n              } else {\r\n                this.valueXML += value[index]\r\n                  .reprXML()\r\n                  .replaceAll(\"text>\", \"country>\");\r\n\r\n                _tempValue = value[index].reprJSON();\r\n                if (_tempValue.length === 2)\r\n                  this.valueJSON[index] = _tempValue.pop();\r\n                else {\r\n                  _tempValue.shift();\r\n                  this.valueJSON[index] = _tempValue;\r\n                }\r\n              }\r\n          }\r\n\r\n        this.valueJSON = [this.constructor.type.toLowerCase(), this.valueJSON];\r\n\r\n        break;\r\n      case /^OrgProperty$/i.test(targetProp):\r\n        if (!Array.isArray(value) || !(value.length >= 1))\r\n          throw new InvalidArgument(\r\n            \"Invalid value for SpecialValueType for OrgProperty. It should be an array with at least one item\"\r\n          );\r\n\r\n        for (let index = 0; index < value.length; index++)\r\n          if (value[index]?.constructor?.identifier !== \"TextType\")\r\n            throw new TypeError(\r\n              \"Invalid value for SpecialValueType for OrgProperty. The items in the array should be of type TextType\"\r\n            );\r\n\r\n        this.value = value.reduce((accumulated, current) => {\r\n          return accumulated\r\n            ? `${accumulated};${current.repr()}`\r\n            : current.repr();\r\n        }, \"\");\r\n\r\n        this.valueXML = value.reduce(\r\n          (accumulated, current) => accumulated + current.reprXML(),\r\n          \"\"\r\n        );\r\n\r\n        this.valueJSON = value.reduce((accumulated, current) => {\r\n          accumulated.push(current.reprJSON().pop());\r\n          return accumulated;\r\n        }, []);\r\n\r\n        if (this.valueJSON.length === 1)\r\n          this.valueJSON.unshift(this.constructor.type.toLowerCase());\r\n        else\r\n          this.valueJSON = [\r\n            this.constructor.type.toLowerCase(),\r\n            this.valueJSON,\r\n          ];\r\n\r\n        break;\r\n      case /^ClientpidmapProperty$/i.test(targetProp):\r\n        if (!Array.isArray(value) || value.length !== 2)\r\n          throw new InvalidArgument(\r\n            \"Invalid value for SpecialValueType for ClientpidmapProperty. It should be an array with a length of 2\"\r\n          );\r\n        else if (value[0]?.constructor?.identifier !== \"IntegerType\")\r\n          throw new TypeError(\r\n            \"Invalid value for SpecialValueType for ClientpidmapProperty. The first item in the array should be of type IntegerType\"\r\n          );\r\n        else if (0 >= Number(value[0].repr()))\r\n          throw new InvalidArgument(\r\n            \"Invalid value for SpecialValueType for ClientpidmapProperty. The first item in the array should be a positive integer of type IntegerType. Zero is not allowed\"\r\n          );\r\n        else if (value[1]?.constructor?.identifier !== \"URIType\")\r\n          throw new TypeError(\r\n            \"Invalid value for SpecialValueType for ClientpidmapProperty. The second item in the array should be of type URIType\"\r\n          );\r\n\r\n        this.value = value.reduce((accumulated, current) => {\r\n          return accumulated\r\n            ? `${accumulated};${current.repr()}`\r\n            : current.repr();\r\n        }, \"\");\r\n\r\n        this.valueXML = value.reduce(\r\n          (accumulated, current) => accumulated + current.reprXML(),\r\n          \"\"\r\n        );\r\n\r\n        this.valueJSON = [\r\n          \"unknown\",\r\n          value.reduce((accumulated, current) => {\r\n            accumulated.push(current.reprJSON().pop());\r\n            return accumulated;\r\n          }, []),\r\n        ];\r\n\r\n        break;\r\n      default:\r\n        throw new InvalidArgument(\r\n          \"Invalid target property for SpecialValueType\"\r\n        );\r\n    }\r\n  }\r\n\r\n  constructor(targetProp, value) {\r\n    super();\r\n\r\n    this.#validateAndSet(targetProp, value);\r\n    this.targetProp = targetProp.toUpperCase();\r\n\r\n    this.checkAbstractPropertiesAndMethods();\r\n    Object.freeze(this);\r\n  }\r\n}\r\n\r\nObject.freeze(SpecialValueType);\r\n"],"names":["_SpecialValueType_brand","WeakSet","SpecialValueType","_BaseValue","targetProp","value","_this","_classCallCheck","_callSuper","_classPrivateMethodInitSpec","_assertClassBrand","_validateAndSet","call","toUpperCase","checkAbstractPropertiesAndMethods","Object","freeze","_inherits","_createClass","BaseValue","_value$","_value$2","MissingArgument","valueRegExp","valueCopy","_tempValue","test","InvalidArgument","valueXML","concat","valueJSON","constructor","type","toLowerCase","Array","isArray","length","index","identifier","TypeError","_toConsumableArray","repr","join","reprXML","replaceAll","reprJSON","pop","shift","reduce","accumulated","current","push","unshift","_value$_index","Number","_defineProperty"],"mappings":"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"}