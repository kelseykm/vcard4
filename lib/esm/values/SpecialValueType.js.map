{"version":3,"file":"SpecialValueType.js","sources":["../../../src/values/SpecialValueType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\n\nexport class SpecialValueType extends BaseValue {\n  static identifier = \"SpecialValueType\";\n  static type = \"TEXT\";\n\n  #validateAndSet(targetProp, value) {\n    if (typeof value === \"undefined\" || typeof targetProp === \"undefined\")\n      throw new MissingArgument(\n        \"Value and target property for SpecialValueType must be supplied\"\n      );\n\n    const valueRegExp =\n      /^(?:individual|group|org|location|application|x-[a-z0-9-]+)$/i;\n\n    let valueCopy;\n    let _tempValue;\n\n    switch (true) {\n      case /^KindProperty$/i.test(targetProp):\n        if (typeof value !== \"string\" || !valueRegExp.test(value))\n          throw new InvalidArgument(\n            \"Invalid value for SpecialValueType for KindProperty\"\n          );\n\n        this.value = value;\n        this.valueXML = `<text>${value}</text>`;\n        this.valueJSON = [this.constructor.type.toLowerCase(), value];\n\n        break;\n      case /^NProperty$/i.test(targetProp):\n        if (!Array.isArray(value) || value.length !== 5)\n          throw new InvalidArgument(\n            \"Invalid value for SpecialValueType for NProperty. It should be an array with a length of 5\"\n          );\n\n        for (let index = 0; index < value.length; index++)\n          if (value[index])\n            if (\n              value[index].constructor.identifier !== \"TextType\" &&\n              value[index].constructor.identifier !== \"TextListType\"\n            )\n              throw new TypeError(\n                \"Invalid value for SpecialValueType for NProperty. The items in the array, if present, should be of type TextType or TextListType\"\n              );\n\n        valueCopy = [...value];\n\n        for (let index = 0; index < valueCopy.length; index++)\n          if (valueCopy[index]) valueCopy[index] = valueCopy[index].repr();\n\n        this.value = valueCopy.join(\";\");\n        this.valueXML = \"\";\n        this.valueJSON = [];\n\n        for (let index = 0; index < value.length; index++)\n          switch (index) {\n            case 0:\n              if (!value[index]) {\n                this.valueXML += \"<surname/>\";\n                this.valueJSON[index] = \"\";\n              } else {\n                this.valueXML += value[index]\n                  .reprXML()\n                  .replaceAll(\"text>\", \"surname>\");\n\n                _tempValue = value[index].reprJSON();\n                if (_tempValue.length === 2)\n                  this.valueJSON[index] = _tempValue.pop();\n                else {\n                  _tempValue.shift();\n                  this.valueJSON[index] = _tempValue;\n                }\n              }\n\n              break;\n            case 1:\n              if (!value[index]) {\n                this.valueXML += \"<given/>\";\n                this.valueJSON[index] = \"\";\n              } else {\n                this.valueXML += value[index]\n                  .reprXML()\n                  .replaceAll(\"text>\", \"given>\");\n\n                _tempValue = value[index].reprJSON();\n                if (_tempValue.length === 2)\n                  this.valueJSON[index] = _tempValue.pop();\n                else {\n                  _tempValue.shift();\n                  this.valueJSON[index] = _tempValue;\n                }\n              }\n\n              break;\n            case 2:\n              if (!value[index]) {\n                this.valueXML += \"<additional/>\";\n                this.valueJSON[index] = \"\";\n              } else {\n                this.valueXML += value[index]\n                  .reprXML()\n                  .replaceAll(\"text>\", \"additional>\");\n\n                _tempValue = value[index].reprJSON();\n                if (_tempValue.length === 2)\n                  this.valueJSON[index] = _tempValue.pop();\n                else {\n                  _tempValue.shift();\n                  this.valueJSON[index] = _tempValue;\n                }\n              }\n\n              break;\n            case 3:\n              if (!value[index]) {\n                this.valueXML += \"<prefix/>\";\n                this.valueJSON[index] = \"\";\n              } else {\n                this.valueXML += value[index]\n                  .reprXML()\n                  .replaceAll(\"text>\", \"prefix>\");\n\n                _tempValue = value[index].reprJSON();\n                if (_tempValue.length === 2)\n                  this.valueJSON[index] = _tempValue.pop();\n                else {\n                  _tempValue.shift();\n                  this.valueJSON[index] = _tempValue;\n                }\n              }\n\n              break;\n            case 4:\n              if (!value[index]) {\n                this.valueXML += \"<suffix/>\";\n                this.valueJSON[index] = \"\";\n              } else {\n                this.valueXML += value[index]\n                  .reprXML()\n                  .replaceAll(\"text>\", \"suffix>\");\n\n                _tempValue = value[index].reprJSON();\n                if (_tempValue.length === 2)\n                  this.valueJSON[index] = _tempValue.pop();\n                else {\n                  _tempValue.shift();\n                  this.valueJSON[index] = _tempValue;\n                }\n              }\n          }\n\n        this.valueJSON = [this.constructor.type.toLowerCase(), this.valueJSON];\n\n        break;\n      case /^GenderProperty$/i.test(targetProp):\n        if (!Array.isArray(value) || value.length !== 2)\n          throw new InvalidArgument(\n            \"Invalid value for SpecialValueType for GenderProperty. It should be an array with a length of 2\"\n          );\n        else if (value[0] && value[0].constructor.identifier !== \"SexType\")\n          throw new TypeError(\n            \"Invalid value for SpecialValueType for GenderProperty. The first item in the array, if present, should be of type SexType\"\n          );\n        else if (\n          (!value[0] && !value[1]) ||\n          (value[1] && value[1].constructor.identifier !== \"TextType\")\n        )\n          throw new TypeError(\n            \"Invalid value for SpecialValueType for GenderProperty. The second item in the array, if present, should be of type TextType\"\n          );\n\n        this.value = value.reduce((accumulated, current) => {\n          return accumulated\n            ? `${accumulated};${current.repr()}`\n            : current.repr();\n        }, \"\");\n\n        this.valueXML = value.reduce(\n          (accumulated, current) => accumulated + current.reprXML(),\n          \"\"\n        );\n\n        this.valueJSON = value.reduce((accumulated, current) => {\n          accumulated.push(current.reprJSON().pop());\n          return accumulated;\n        }, []);\n\n        if (this.valueJSON.length === 1)\n          this.valueJSON.unshift(this.constructor.type.toLowerCase());\n        else\n          this.valueJSON = [\n            this.constructor.type.toLowerCase(),\n            this.valueJSON,\n          ];\n\n        break;\n      case /^AdrProperty$/i.test(targetProp):\n        if (!Array.isArray(value) || value.length !== 7)\n          throw new InvalidArgument(\n            \"Invalid value for SpecialValueType for AdrProperty. It should be an array with a length of 7\"\n          );\n\n        for (let index = 0; index < value.length; index++)\n          if (value[index])\n            if (value[index].constructor.identifier !== \"TextType\")\n              throw new TypeError(\n                \"Invalid value for SpecialValueType for AdrProperty. The items in the array, if present, should be of type TextType\"\n              );\n\n        valueCopy = [...value];\n\n        for (let index = 0; index < valueCopy.length; index++)\n          if (valueCopy[index]) valueCopy[index] = valueCopy[index].repr();\n\n        this.value = valueCopy.join(\";\");\n        this.valueXML = \"\";\n        this.valueJSON = [];\n\n        for (let index = 0; index < value.length; index++)\n          switch (index) {\n            case 0:\n              if (!value[index]) {\n                this.valueXML += \"<pobox/>\";\n                this.valueJSON[index] = \"\";\n              } else {\n                this.valueXML += value[index]\n                  .reprXML()\n                  .replaceAll(\"text>\", \"pobox>\");\n\n                _tempValue = value[index].reprJSON();\n                if (_tempValue.length === 2)\n                  this.valueJSON[index] = _tempValue.pop();\n                else {\n                  _tempValue.shift();\n                  this.valueJSON[index] = _tempValue;\n                }\n              }\n\n              break;\n            case 1:\n              if (!value[index]) {\n                this.valueXML += \"<ext/>\";\n                this.valueJSON[index] = \"\";\n              } else {\n                this.valueXML += value[index]\n                  .reprXML()\n                  .replaceAll(\"text>\", \"ext>\");\n\n                _tempValue = value[index].reprJSON();\n                if (_tempValue.length === 2)\n                  this.valueJSON[index] = _tempValue.pop();\n                else {\n                  _tempValue.shift();\n                  this.valueJSON[index] = _tempValue;\n                }\n              }\n\n              break;\n            case 2:\n              if (!value[index]) {\n                this.valueXML += \"<street/>\";\n                this.valueJSON[index] = \"\";\n              } else {\n                this.valueXML += value[index]\n                  .reprXML()\n                  .replaceAll(\"text>\", \"street>\");\n\n                _tempValue = value[index].reprJSON();\n                if (_tempValue.length === 2)\n                  this.valueJSON[index] = _tempValue.pop();\n                else {\n                  _tempValue.shift();\n                  this.valueJSON[index] = _tempValue;\n                }\n              }\n\n              break;\n            case 3:\n              if (!value[index]) {\n                this.valueXML += \"<locality/>\";\n                this.valueJSON[index] = \"\";\n              } else {\n                this.valueXML += value[index]\n                  .reprXML()\n                  .replaceAll(\"text>\", \"locality>\");\n\n                _tempValue = value[index].reprJSON();\n                if (_tempValue.length === 2)\n                  this.valueJSON[index] = _tempValue.pop();\n                else {\n                  _tempValue.shift();\n                  this.valueJSON[index] = _tempValue;\n                }\n              }\n\n              break;\n            case 4:\n              if (!value[index]) {\n                this.valueXML += \"<region/>\";\n                this.valueJSON[index] = \"\";\n              } else {\n                this.valueXML += value[index]\n                  .reprXML()\n                  .replaceAll(\"text>\", \"region>\");\n\n                _tempValue = value[index].reprJSON();\n                if (_tempValue.length === 2)\n                  this.valueJSON[index] = _tempValue.pop();\n                else {\n                  _tempValue.shift();\n                  this.valueJSON[index] = _tempValue;\n                }\n              }\n\n              break;\n            case 5:\n              if (!value[index]) {\n                this.valueXML += \"<code/>\";\n                this.valueJSON[index] = \"\";\n              } else {\n                this.valueXML += value[index]\n                  .reprXML()\n                  .replaceAll(\"text>\", \"code>\");\n\n                _tempValue = value[index].reprJSON();\n                if (_tempValue.length === 2)\n                  this.valueJSON[index] = _tempValue.pop();\n                else {\n                  _tempValue.shift();\n                  this.valueJSON[index] = _tempValue;\n                }\n              }\n\n              break;\n            case 6:\n              if (!value[index]) {\n                this.valueXML += \"<country/>\";\n                this.valueJSON[index] = \"\";\n              } else {\n                this.valueXML += value[index]\n                  .reprXML()\n                  .replaceAll(\"text>\", \"country>\");\n\n                _tempValue = value[index].reprJSON();\n                if (_tempValue.length === 2)\n                  this.valueJSON[index] = _tempValue.pop();\n                else {\n                  _tempValue.shift();\n                  this.valueJSON[index] = _tempValue;\n                }\n              }\n          }\n\n        this.valueJSON = [this.constructor.type.toLowerCase(), this.valueJSON];\n\n        break;\n      case /^OrgProperty$/i.test(targetProp):\n        if (!Array.isArray(value) || !(value.length >= 1))\n          throw new InvalidArgument(\n            \"Invalid value for SpecialValueType for OrgProperty. It should be an array with at least one item\"\n          );\n\n        for (let index = 0; index < value.length; index++)\n          if (value[index]?.constructor?.identifier !== \"TextType\")\n            throw new TypeError(\n              \"Invalid value for SpecialValueType for OrgProperty. The items in the array should be of type TextType\"\n            );\n\n        this.value = value.reduce((accumulated, current) => {\n          return accumulated\n            ? `${accumulated};${current.repr()}`\n            : current.repr();\n        }, \"\");\n\n        this.valueXML = value.reduce(\n          (accumulated, current) => accumulated + current.reprXML(),\n          \"\"\n        );\n\n        this.valueJSON = value.reduce((accumulated, current) => {\n          accumulated.push(current.reprJSON().pop());\n          return accumulated;\n        }, []);\n\n        if (this.valueJSON.length === 1)\n          this.valueJSON.unshift(this.constructor.type.toLowerCase());\n        else\n          this.valueJSON = [\n            this.constructor.type.toLowerCase(),\n            this.valueJSON,\n          ];\n\n        break;\n      case /^ClientpidmapProperty$/i.test(targetProp):\n        if (!Array.isArray(value) || value.length !== 2)\n          throw new InvalidArgument(\n            \"Invalid value for SpecialValueType for ClientpidmapProperty. It should be an array with a length of 2\"\n          );\n        else if (value[0]?.constructor?.identifier !== \"IntegerType\")\n          throw new TypeError(\n            \"Invalid value for SpecialValueType for ClientpidmapProperty. The first item in the array should be of type IntegerType\"\n          );\n        else if (0 >= Number(value[0].repr()))\n          throw new InvalidArgument(\n            \"Invalid value for SpecialValueType for ClientpidmapProperty. The first item in the array should be a positive integer of type IntegerType. Zero is not allowed\"\n          );\n        else if (value[1]?.constructor?.identifier !== \"URIType\")\n          throw new TypeError(\n            \"Invalid value for SpecialValueType for ClientpidmapProperty. The second item in the array should be of type URIType\"\n          );\n\n        this.value = value.reduce((accumulated, current) => {\n          return accumulated\n            ? `${accumulated};${current.repr()}`\n            : current.repr();\n        }, \"\");\n\n        this.valueXML = value.reduce(\n          (accumulated, current) => accumulated + current.reprXML(),\n          \"\"\n        );\n\n        this.valueJSON = [\n          \"unknown\",\n          value.reduce((accumulated, current) => {\n            accumulated.push(current.reprJSON().pop());\n            return accumulated;\n          }, []),\n        ];\n\n        break;\n      default:\n        throw new InvalidArgument(\n          \"Invalid target property for SpecialValueType\"\n        );\n    }\n  }\n\n  constructor(targetProp, value) {\n    super();\n\n    this.#validateAndSet(targetProp, value);\n    this.targetProp = targetProp.toUpperCase();\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(SpecialValueType);\n"],"names":["_validateAndSet","WeakSet","SpecialValueType","_BaseValue","_inherits","_super","_createSuper","targetProp","value","_this","_classCallCheck","call","_classPrivateMethodInitSpec","_assertThisInitialized","_classPrivateMethodGet","_validateAndSet2","toUpperCase","checkAbstractPropertiesAndMethods","Object","freeze","_createClass","BaseValue","_value$","_value$2","MissingArgument","valueRegExp","valueCopy","_tempValue","test","InvalidArgument","valueXML","concat","valueJSON","constructor","type","toLowerCase","Array","isArray","length","index","identifier","TypeError","_toConsumableArray","repr","join","reprXML","replaceAll","reprJSON","pop","shift","reduce","accumulated","current","push","unshift","_value$_index","Number","_defineProperty"],"mappings":"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"}