{"version":3,"file":"IntegerType.js","sources":["../../../src/values/IntegerType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\n\nexport class IntegerType extends BaseValue {\n  static type = \"INTEGER\";\n  static identifier = \"IntegerType\";\n\n  #intValue;\n\n  #validate(intValue) {\n    if (typeof intValue === \"undefined\")\n      throw new MissingArgument(\"Value for IntegerType must be supplied\");\n    else if (typeof intValue !== \"number\" && typeof intValue !== \"bigint\")\n      throw new TypeError(\n        \"Value for IntegerType must be of type number or bigint\"\n      );\n    else if (/\\./.test(intValue.toString()))\n      throw new InvalidArgument(\"Invalid value for IntegerType\");\n    else if (\n      typeof intValue === \"number\" &&\n      !(\n        -Number.MAX_SAFE_INTEGER < intValue &&\n        intValue < Number.MAX_SAFE_INTEGER\n      )\n    )\n      throw new InvalidArgument(\n        `The maximum value is ${Number.MAX_SAFE_INTEGER}, and the minimum value is ${Number.MIN_SAFE_INTEGER} for number IntegerType`\n      );\n    else if (\n      typeof intValue === \"bigint\" &&\n      !(-9223372036854775809n < intValue && intValue < 9223372036854775808n)\n    )\n      throw new InvalidArgument(\n        \"The maximum value is 9223372036854775807n, and the minimum value is -9223372036854775808n for bigint IntegerType\"\n      );\n  }\n\n  get value() {\n    return `${this.#intValue}`;\n  }\n\n  get valueXML() {\n    return `<${this.constructor.type.toLowerCase()}>${\n      this.#intValue\n    }</${this.constructor.type.toLowerCase()}>`;\n  }\n\n  get valueJSON() {\n    return [this.constructor.type.toLowerCase(), this.#intValue];\n  }\n\n  constructor(intValue) {\n    super();\n\n    this.#validate(intValue);\n    this.#intValue = intValue;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(IntegerType);\n"],"names":["_intValue","WeakMap","_validate","WeakSet","IntegerType","_BaseValue","_inherits","_super","_createSuper","intValue","_this","_classCallCheck","call","_classPrivateMethodInitSpec","_assertThisInitialized","_classPrivateFieldInitSpec","writable","value","_classPrivateMethodGet","_validate2","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_createClass","key","get","concat","_classPrivateFieldGet","constructor","type","toLowerCase","BaseValue","MissingArgument","TypeError","test","toString","InvalidArgument","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","_defineProperty"],"mappings":"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"}