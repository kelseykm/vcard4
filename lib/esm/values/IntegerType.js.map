{"version":3,"file":"IntegerType.js","sources":["../../../src/values/IntegerType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\r\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\r\n\r\nexport class IntegerType extends BaseValue {\r\n  static type = \"INTEGER\";\r\n  static identifier = \"IntegerType\";\r\n\r\n  #intValue;\r\n\r\n  #validate(intValue) {\r\n    if (typeof intValue === \"undefined\")\r\n      throw new MissingArgument(\"Value for IntegerType must be supplied\");\r\n    else if (typeof intValue !== \"number\" && typeof intValue !== \"bigint\")\r\n      throw new TypeError(\r\n        \"Value for IntegerType must be of type number or bigint\"\r\n      );\r\n    else if (/\\./.test(intValue.toString()))\r\n      throw new InvalidArgument(\"Invalid value for IntegerType\");\r\n    else if (\r\n      typeof intValue === \"number\" &&\r\n      !(\r\n        -Number.MAX_SAFE_INTEGER < intValue &&\r\n        intValue < Number.MAX_SAFE_INTEGER\r\n      )\r\n    )\r\n      throw new InvalidArgument(\r\n        `The maximum value is ${Number.MAX_SAFE_INTEGER}, and the minimum value is ${Number.MIN_SAFE_INTEGER} for number IntegerType`\r\n      );\r\n    else if (\r\n      typeof intValue === \"bigint\" &&\r\n      !(-9223372036854775809n < intValue && intValue < 9223372036854775808n)\r\n    )\r\n      throw new InvalidArgument(\r\n        \"The maximum value is 9223372036854775807n, and the minimum value is -9223372036854775808n for bigint IntegerType\"\r\n      );\r\n  }\r\n\r\n  get value() {\r\n    return `${this.#intValue}`;\r\n  }\r\n\r\n  get valueXML() {\r\n    return `<${this.constructor.type.toLowerCase()}>${\r\n      this.#intValue\r\n    }</${this.constructor.type.toLowerCase()}>`;\r\n  }\r\n\r\n  get valueJSON() {\r\n    return [this.constructor.type.toLowerCase(), this.#intValue];\r\n  }\r\n\r\n  constructor(intValue) {\r\n    super();\r\n\r\n    this.#validate(intValue);\r\n    this.#intValue = intValue;\r\n\r\n    this.checkAbstractPropertiesAndMethods();\r\n    Object.freeze(this);\r\n  }\r\n}\r\n\r\nObject.freeze(IntegerType);\r\n"],"names":["_intValue","WeakMap","_IntegerType_brand","WeakSet","IntegerType","_BaseValue","intValue","_this","_classCallCheck","_callSuper","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_assertClassBrand","_validate","call","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_inherits","_createClass","key","get","concat","_classPrivateFieldGet","constructor","type","toLowerCase","BaseValue","MissingArgument","TypeError","test","toString","InvalidArgument","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","_defineProperty"],"mappings":"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"}