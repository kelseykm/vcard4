{"version":3,"file":"IntegerListType.js","sources":["../../../src/values/IntegerListType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\nimport { MissingArgument } from \"../errors/index.js\";\n\nexport class IntegerListType extends BaseValue {\n  static type = \"INTEGER\";\n  static identifier = \"IntegerListType\";\n\n  #integerlist;\n\n  get value() {\n    return this.#integerlist\n      .reduce((accumulatedIntegerTypes, currentIntegerType) => {\n        accumulatedIntegerTypes.push(currentIntegerType.repr());\n        return accumulatedIntegerTypes;\n      }, [])\n      .join(\",\");\n  }\n\n  get valueXML() {\n    return this.#integerlist.reduce(\n      (accumulatedIntegerTypes, currentIntegerType) =>\n        accumulatedIntegerTypes + currentIntegerType.reprXML(),\n      \"\"\n    );\n  }\n\n  get valueJSON() {\n    const value = this.#integerlist.reduce(\n      (accumulatedIntegerTypes, currentIntegerType) => {\n        accumulatedIntegerTypes.push(currentIntegerType.reprJSON().pop());\n        return accumulatedIntegerTypes;\n      },\n      []\n    );\n\n    value.unshift(this.constructor.type.toLowerCase());\n\n    return value;\n  }\n\n  #validate(integerlist) {\n    if (typeof integerlist === \"undefined\")\n      throw new MissingArgument(\"Value for IntegerListType must be supplied\");\n    else if (!Array.isArray(integerlist))\n      throw new TypeError(\n        \"Value for IntegerListType must be passed in an array\"\n      );\n\n    for (const integer of integerlist) {\n      if (integer.constructor.identifier !== \"IntegerType\")\n        throw new TypeError(\n          \"Invalid type for value of IntegerListType. It should be an array of IntegerTypes\"\n        );\n    }\n  }\n\n  constructor(integerlist) {\n    super();\n\n    this.#validate(integerlist);\n    this.#integerlist = integerlist;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(IntegerListType);\n"],"names":["_integerlist","WeakMap","_validate","WeakSet","IntegerListType","_BaseValue","_inherits","_super","_createSuper","integerlist","_this","_classCallCheck","call","_classPrivateMethodInitSpec","_assertThisInitialized","_classPrivateFieldInitSpec","writable","value","_classPrivateMethodGet","_validate2","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_createClass","key","get","_classPrivateFieldGet","reduce","accumulatedIntegerTypes","currentIntegerType","push","repr","join","reprXML","reprJSON","pop","unshift","constructor","type","toLowerCase","BaseValue","MissingArgument","Array","isArray","TypeError","_iterator","_createForOfIteratorHelper","_step","s","n","done","integer","identifier","err","e","f","_defineProperty"],"mappings":"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"}