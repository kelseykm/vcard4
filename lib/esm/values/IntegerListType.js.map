{"version":3,"file":"IntegerListType.js","sources":["../../../src/values/IntegerListType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\r\nimport { MissingArgument } from \"../errors/index.js\";\r\n\r\nexport class IntegerListType extends BaseValue {\r\n  static type = \"INTEGER\";\r\n  static identifier = \"IntegerListType\";\r\n\r\n  #integerlist;\r\n\r\n  get value() {\r\n    return this.#integerlist\r\n      .reduce((accumulatedIntegerTypes, currentIntegerType) => {\r\n        accumulatedIntegerTypes.push(currentIntegerType.repr());\r\n        return accumulatedIntegerTypes;\r\n      }, [])\r\n      .join(\",\");\r\n  }\r\n\r\n  get valueXML() {\r\n    return this.#integerlist.reduce(\r\n      (accumulatedIntegerTypes, currentIntegerType) =>\r\n        accumulatedIntegerTypes + currentIntegerType.reprXML(),\r\n      \"\"\r\n    );\r\n  }\r\n\r\n  get valueJSON() {\r\n    const value = this.#integerlist.reduce(\r\n      (accumulatedIntegerTypes, currentIntegerType) => {\r\n        accumulatedIntegerTypes.push(currentIntegerType.reprJSON().pop());\r\n        return accumulatedIntegerTypes;\r\n      },\r\n      []\r\n    );\r\n\r\n    value.unshift(this.constructor.type.toLowerCase());\r\n\r\n    return value;\r\n  }\r\n\r\n  #validate(integerlist) {\r\n    if (typeof integerlist === \"undefined\")\r\n      throw new MissingArgument(\"Value for IntegerListType must be supplied\");\r\n    else if (!Array.isArray(integerlist))\r\n      throw new TypeError(\r\n        \"Value for IntegerListType must be passed in an array\"\r\n      );\r\n\r\n    for (const integer of integerlist) {\r\n      if (integer.constructor.identifier !== \"IntegerType\")\r\n        throw new TypeError(\r\n          \"Invalid type for value of IntegerListType. It should be an array of IntegerTypes\"\r\n        );\r\n    }\r\n  }\r\n\r\n  constructor(integerlist) {\r\n    super();\r\n\r\n    this.#validate(integerlist);\r\n    this.#integerlist = integerlist;\r\n\r\n    this.checkAbstractPropertiesAndMethods();\r\n    Object.freeze(this);\r\n  }\r\n}\r\n\r\nObject.freeze(IntegerListType);\r\n"],"names":["_integerlist","WeakMap","_IntegerListType_brand","WeakSet","IntegerListType","_BaseValue","integerlist","_this","_classCallCheck","_callSuper","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_assertClassBrand","_validate","call","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_inherits","_createClass","key","get","_classPrivateFieldGet","reduce","accumulatedIntegerTypes","currentIntegerType","push","repr","join","reprXML","value","reprJSON","pop","unshift","constructor","type","toLowerCase","BaseValue","MissingArgument","Array","isArray","TypeError","_iterator","_createForOfIteratorHelper","_step","s","n","done","integer","identifier","err","e","f","_defineProperty"],"mappings":"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"}