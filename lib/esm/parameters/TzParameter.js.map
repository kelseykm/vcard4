{"version":3,"file":"TzParameter.js","sources":["../../../src/parameters/TzParameter.js"],"sourcesContent":["import { BaseParameter } from \"./BaseParameter.js\";\nimport { MissingArgument } from \"../errors/index.js\";\n\nexport class TzParameter extends BaseParameter {\n  static param = \"TZ\";\n  static identifier = \"TzParameter\";\n\n  #tzValue;\n\n  get value() {\n    return this.#tzValue.constructor.identifier === \"URIType\"\n      ? `\"${this.#tzValue.repr()}\"`\n      : this.#tzValue.repr();\n  }\n\n  get valueXML() {\n    return this.#tzValue.reprXML();\n  }\n\n  get valueJSON() {\n    return this.#tzValue.reprJSON();\n  }\n\n  #validate(tzValue) {\n    if (typeof tzValue === \"undefined\")\n      throw new MissingArgument(\"Value for TzParameter must be supplied\");\n\n    if (\n      tzValue.constructor.identifier !== \"ParameterValueType\" &&\n      tzValue.constructor.identifier !== \"URIType\" &&\n      !(\n        tzValue.constructor.identifier === \"DateTimeType\" &&\n        tzValue.type === \"UTC-OFFSET\"\n      )\n    )\n      throw new TypeError(\"Invalid type for value for TzParameter\");\n  }\n\n  constructor(tzValue) {\n    super();\n\n    this.#validate(tzValue);\n    this.#tzValue = tzValue;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(TzParameter);\n"],"names":["_tzValue","WeakMap","_validate","WeakSet","TzParameter","_BaseParameter","_inherits","_super","_createSuper","tzValue","_this","_classCallCheck","call","_classPrivateMethodInitSpec","_assertThisInitialized","_classPrivateFieldInitSpec","writable","value","_classPrivateMethodGet","_validate2","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_createClass","key","get","_classPrivateFieldGet","constructor","identifier","concat","repr","reprXML","reprJSON","BaseParameter","MissingArgument","type","TypeError","_defineProperty"],"mappings":"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"}