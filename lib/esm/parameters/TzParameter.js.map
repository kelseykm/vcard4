{"version":3,"file":"TzParameter.js","sources":["../../../src/parameters/TzParameter.js"],"sourcesContent":["import { BaseParameter } from \"./BaseParameter.js\";\nimport { MissingArgument } from \"../errors/index.js\";\n\nexport class TzParameter extends BaseParameter {\n  static param = \"TZ\";\n  static identifier = \"TzParameter\";\n\n  #tzValue;\n\n  get value() {\n    return this.#tzValue.constructor.identifier === \"URIType\"\n      ? `\"${this.#tzValue.repr()}\"`\n      : this.#tzValue.repr();\n  }\n\n  get valueXML() {\n    return this.#tzValue.reprXML();\n  }\n\n  get valueJSON() {\n    return this.#tzValue.reprJSON();\n  }\n\n  #validate(tzValue) {\n    if (typeof tzValue === \"undefined\")\n      throw new MissingArgument(\"Value for TzParameter must be supplied\");\n\n    if (\n      tzValue.constructor.identifier !== \"ParameterValueType\" &&\n      tzValue.constructor.identifier !== \"URIType\" &&\n      !(\n        tzValue.constructor.identifier === \"DateTimeType\" &&\n        tzValue.type === \"UTC-OFFSET\"\n      )\n    )\n      throw new TypeError(\"Invalid type for value for TzParameter\");\n  }\n\n  constructor(tzValue) {\n    super();\n\n    this.#validate(tzValue);\n    this.#tzValue = tzValue;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(TzParameter);\n"],"names":["TzParameter","tzValue","checkAbstractPropertiesAndMethods","Object","freeze","constructor","identifier","repr","reprXML","reprJSON","BaseParameter","MissingArgument","type","TypeError"],"mappings":"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"}