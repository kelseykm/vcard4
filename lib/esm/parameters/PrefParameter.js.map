{"version":3,"file":"PrefParameter.js","sources":["../../../src/parameters/PrefParameter.js"],"sourcesContent":["import { BaseParameter } from \"./BaseParameter.js\";\r\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\r\n\r\nexport class PrefParameter extends BaseParameter {\r\n  static param = \"PREF\";\r\n  static identifier = \"PrefParameter\";\r\n\r\n  #prefValue;\r\n\r\n  get value() {\r\n    return this.#prefValue.repr();\r\n  }\r\n\r\n  get valueXML() {\r\n    return this.#prefValue.reprXML();\r\n  }\r\n\r\n  get valueJSON() {\r\n    return this.#prefValue.reprJSON();\r\n  }\r\n\r\n  #validate(prefValue) {\r\n    if (typeof prefValue === \"undefined\")\r\n      throw new MissingArgument(\"Value for PrefParameter must be supplied\");\r\n    else if (prefValue.constructor.identifier !== \"IntegerType\")\r\n      throw new TypeError(\r\n        \"Value for PrefParameter should be of type IntegerType\"\r\n      );\r\n    else if (Number(prefValue.repr()) < 1 || Number(prefValue.repr()) > 100)\r\n      throw new InvalidArgument(\r\n        \"Value for PrefParameter must be between 1 and 100\"\r\n      );\r\n  }\r\n\r\n  constructor(prefValue) {\r\n    super();\r\n\r\n    this.#validate(prefValue);\r\n    this.#prefValue = prefValue;\r\n\r\n    this.checkAbstractPropertiesAndMethods();\r\n    Object.freeze(this);\r\n  }\r\n}\r\n\r\nObject.freeze(PrefParameter);\r\n"],"names":["_prefValue","WeakMap","_PrefParameter_brand","WeakSet","PrefParameter","_BaseParameter","prefValue","_this","_classCallCheck","_callSuper","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_assertClassBrand","_validate","call","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_inherits","_createClass","key","get","_classPrivateFieldGet","repr","reprXML","reprJSON","BaseParameter","MissingArgument","constructor","identifier","TypeError","Number","InvalidArgument","_defineProperty"],"mappings":";;;;;AACsE,IAAAA,UAAA,oBAAAC,OAAA,EAAA,CAAA;AAAA,IAAAC,oBAAA,oBAAAC,OAAA,EAAA,CAAA;AAEzDC,IAAAA,aAAa,0BAAAC,cAAA,EAAA;EA+BxB,SAAAD,aAAAA,CAAYE,WAAS,EAAE;AAAA,IAAA,IAAAC,KAAA,CAAA;AAAAC,IAAAA,eAAA,OAAAJ,aAAA,CAAA,CAAA;IACrBG,KAAA,GAAAE,UAAA,CAAA,IAAA,EAAAL,aAAA,CAAA,CAAA;IAAQM,2BAAA,CAAAH,KAAA,EAAAL,oBAAA,CAAA,CAAA;IA5BVS,0BAAA,CAAAJ,KAAA,EAAAP,UAAU,EAAA,KAAA,CAAA,CAAA,CAAA;AA8BRY,IAAAA,iBAAA,CAAAV,oBAAA,EAAAK,KAAA,EAAKM,SAAQ,CAAC,CAAAC,IAAA,CAAAP,KAAA,EAACD,WAAS,CAAA,CAAA;AACxBS,IAAAA,sBAAA,CAAKf,UAAU,EAAAO,KAAA,EAAGD,WAAJ,CAAC,CAAA;IAEfC,KAAA,CAAKS,iCAAiC,EAAE,CAAA;AACxCC,IAAAA,MAAM,CAACC,MAAM,CAAAX,KAAK,CAAC,CAAA;AAAC,IAAA,OAAAA,KAAA,CAAA;AACtB,GAAA;EAACY,SAAA,CAAAf,aAAA,EAAAC,cAAA,CAAA,CAAA;EAAA,OAAAe,YAAA,CAAAhB,aAAA,EAAA,CAAA;IAAAiB,GAAA,EAAA,OAAA;IAAAC,GAAA,EAjCD,SAAAA,GAAAA,GAAY;MACV,OAAOC,sBAAA,CAAKvB,UAAU,EAAf,IAAc,CAAC,CAACwB,IAAI,EAAE,CAAA;AAC/B,KAAA;AAAC,GAAA,EAAA;IAAAH,GAAA,EAAA,UAAA;IAAAC,GAAA,EAED,SAAAA,GAAAA,GAAe;MACb,OAAOC,sBAAA,CAAKvB,UAAU,EAAf,IAAc,CAAC,CAACyB,OAAO,EAAE,CAAA;AAClC,KAAA;AAAC,GAAA,EAAA;IAAAJ,GAAA,EAAA,WAAA;IAAAC,GAAA,EAED,SAAAA,GAAAA,GAAgB;MACd,OAAOC,sBAAA,CAAKvB,UAAU,EAAf,IAAc,CAAC,CAAC0B,QAAQ,EAAE,CAAA;AACnC,KAAA;AAAC,GAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CAhBgCC,aAAa,EAAA;AAwC/C,SAAAd,SAAAA,CAtBWP,SAAS,EAAE;EACnB,IAAI,OAAOA,SAAS,KAAK,WAAW,EAClC,MAAM,IAAIsB,eAAe,CAAC,0CAA0C,CAAC,CAAC,KACnE,IAAItB,SAAS,CAACuB,WAAW,CAACC,UAAU,KAAK,aAAa,EACzD,MAAM,IAAIC,SAAS,CACjB,uDACF,CAAC,CAAC,KACC,IAAIC,MAAM,CAAC1B,SAAS,CAACkB,IAAI,EAAE,CAAC,GAAG,CAAC,IAAIQ,MAAM,CAAC1B,SAAS,CAACkB,IAAI,EAAE,CAAC,GAAG,GAAG,EACrE,MAAM,IAAIS,eAAe,CACvB,mDACF,CAAC,CAAA;AACL,CAAA;AAACC,eAAA,CA7BU9B,aAAa,EAAA,OAAA,EACT,MAAM,CAAA,CAAA;AAAA8B,eAAA,CADV9B,aAAa,EAAA,YAAA,EAEJ,eAAe,CAAA,CAAA;AAwCrCa,MAAM,CAACC,MAAM,CAACd,aAAa,CAAC;;;;"}