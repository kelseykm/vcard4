{"version":3,"file":"PrefParameter.js","sources":["../../../src/parameters/PrefParameter.js"],"sourcesContent":["import { BaseParameter } from \"./BaseParameter.js\";\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\n\nexport class PrefParameter extends BaseParameter {\n  static param = \"PREF\";\n  static identifier = \"PrefParameter\";\n\n  #prefValue;\n\n  get value() {\n    return this.#prefValue.repr();\n  }\n\n  get valueXML() {\n    return this.#prefValue.reprXML();\n  }\n\n  get valueJSON() {\n    return this.#prefValue.reprJSON();\n  }\n\n  #validate(prefValue) {\n    if (typeof prefValue === \"undefined\")\n      throw new MissingArgument(\"Value for PrefParameter must be supplied\");\n    else if (prefValue.constructor.identifier !== \"IntegerType\")\n      throw new TypeError(\n        \"Value for PrefParameter should be of type IntegerType\"\n      );\n    else if (Number(prefValue.repr()) < 1 || Number(prefValue.repr()) > 100)\n      throw new InvalidArgument(\n        \"Value for PrefParameter must be between 1 and 100\"\n      );\n  }\n\n  constructor(prefValue) {\n    super();\n\n    this.#validate(prefValue);\n    this.#prefValue = prefValue;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(PrefParameter);\n"],"names":["_prefValue","WeakMap","_validate","WeakSet","PrefParameter","_BaseParameter","_inherits","_super","_createSuper","prefValue","_this","_classCallCheck","call","_classPrivateMethodInitSpec","_assertThisInitialized","_classPrivateFieldInitSpec","writable","value","_classPrivateMethodGet","_validate2","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_createClass","key","get","_classPrivateFieldGet","repr","reprXML","reprJSON","BaseParameter","MissingArgument","constructor","identifier","TypeError","Number","InvalidArgument","_defineProperty"],"mappings":";;;;;AACsE,IAAAA,UAAA,oBAAAC,OAAA,EAAA,CAAA;AAAA,IAAAC,SAAA,oBAAAC,OAAA,EAAA,CAAA;AAEzDC,IAAAA,aAAa,0BAAAC,cAAA,EAAA;EAAAC,SAAA,CAAAF,aAAA,EAAAC,cAAA,CAAA,CAAA;AAAA,EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,aAAA,CAAA,CAAA;EA+BxB,SAAAA,aAAAA,CAAYK,WAAS,EAAE;AAAA,IAAA,IAAAC,KAAA,CAAA;AAAAC,IAAAA,eAAA,OAAAP,aAAA,CAAA,CAAA;IACrBM,KAAA,GAAAH,MAAA,CAAAK,IAAA,CAAA,IAAA,CAAA,CAAA;AAAQC,IAAAA,2BAAA,CAAAC,sBAAA,CAAAJ,KAAA,GAAAR,SAAA,CAAA,CAAA;AAAAa,IAAAA,0BAAA,CAAAD,sBAAA,CAAAJ,KAAA,GAAAV,UAAA,EAAA;MAAAgB,QAAA,EAAA,IAAA;MAAAC,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;AAERC,IAAAA,sBAAA,CAAAJ,sBAAA,CAAAJ,KAAA,GAAAR,SAAA,EAAAiB,UAAA,CAAA,CAAAP,IAAA,CAAAE,sBAAA,CAAAJ,KAAA,GAAeD,WAAS,CAAA,CAAA;AACxBW,IAAAA,qBAAA,CAAAN,sBAAA,CAAAJ,KAAA,CAAAV,EAAAA,UAAA,EAAkBS,WAAS,CAAA,CAAA;IAE3BC,KAAA,CAAKW,iCAAiC,EAAE,CAAA;AACxCC,IAAAA,MAAM,CAACC,MAAM,CAAAT,sBAAA,CAAAJ,KAAA,CAAK,CAAC,CAAA;AAAC,IAAA,OAAAA,KAAA,CAAA;AACtB,GAAA;AAACc,EAAAA,YAAA,CAAApB,aAAA,EAAA,CAAA;IAAAqB,GAAA,EAAA,OAAA;IAAAC,GAAA,EAjCD,SAAAA,GAAAA,GAAY;AACV,MAAA,OAAOC,qBAAA,CAAI,IAAA,EAAA3B,UAAA,CAAY4B,CAAAA,IAAI,EAAE,CAAA;AAC/B,KAAA;AAAC,GAAA,EAAA;IAAAH,GAAA,EAAA,UAAA;IAAAC,GAAA,EAED,SAAAA,GAAAA,GAAe;AACb,MAAA,OAAOC,qBAAA,CAAI,IAAA,EAAA3B,UAAA,CAAY6B,CAAAA,OAAO,EAAE,CAAA;AAClC,KAAA;AAAC,GAAA,EAAA;IAAAJ,GAAA,EAAA,WAAA;IAAAC,GAAA,EAED,SAAAA,GAAAA,GAAgB;AACd,MAAA,OAAOC,qBAAA,CAAI,IAAA,EAAA3B,UAAA,CAAY8B,CAAAA,QAAQ,EAAE,CAAA;AACnC,KAAA;AAAC,GAAA,CAAA,CAAA,CAAA;AAAA,EAAA,OAAA1B,aAAA,CAAA;AAAA,CAAA,CAhBgC2B,aAAa,EAAA;AAwC/C,SAAAZ,UAAAA,CAtBWV,SAAS,EAAE;EACnB,IAAI,OAAOA,SAAS,KAAK,WAAW,EAClC,MAAM,IAAIuB,eAAe,CAAC,0CAA0C,CAAC,CAAC,KACnE,IAAIvB,SAAS,CAACwB,WAAW,CAACC,UAAU,KAAK,aAAa,EACzD,MAAM,IAAIC,SAAS,CACjB,uDACF,CAAC,CAAC,KACC,IAAIC,MAAM,CAAC3B,SAAS,CAACmB,IAAI,EAAE,CAAC,GAAG,CAAC,IAAIQ,MAAM,CAAC3B,SAAS,CAACmB,IAAI,EAAE,CAAC,GAAG,GAAG,EACrE,MAAM,IAAIS,eAAe,CACvB,mDACF,CAAC,CAAA;AACL,CAAA;AAACC,eAAA,CA7BUlC,aAAa,EAAA,OAAA,EACT,MAAM,CAAA,CAAA;AAAAkC,eAAA,CADVlC,aAAa,EAAA,YAAA,EAEJ,eAAe,CAAA,CAAA;AAwCrCkB,MAAM,CAACC,MAAM,CAACnB,aAAa,CAAC;;;;"}