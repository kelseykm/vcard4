{"version":3,"file":"CalscaleParameter.js","sources":["../../../src/parameters/CalscaleParameter.js"],"sourcesContent":["import { BaseParameter } from \"./BaseParameter.js\";\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\n\nexport class CalscaleParameter extends BaseParameter {\n  static param = \"CALSCALE\";\n  static identifier = \"CalscaleParameter\";\n\n  #calscaleValue;\n  #calscaleRegExp = /^(?:gregorian|[Xx]-[A-Za-z0-9-]+)$/;\n\n  get value() {\n    return this.#calscaleValue.repr();\n  }\n\n  get valueXML() {\n    return this.#calscaleValue.reprXML();\n  }\n\n  get valueJSON() {\n    return this.#calscaleValue.reprJSON();\n  }\n\n  #validate(calscaleValue) {\n    if (typeof calscaleValue === \"undefined\")\n      throw new MissingArgument(\"Value for CalscaleParameter must be supplied\");\n    else if (calscaleValue.constructor.identifier !== \"ParameterValueType\")\n      throw new MissingArgument(\n        \"Value for CalscaleParameter must of type ParameterValueType\"\n      );\n    else if (!this.#calscaleRegExp.test(calscaleValue.repr()))\n      throw new InvalidArgument(\"Invalid calscale value\");\n  }\n\n  constructor(calscaleValue) {\n    super();\n\n    this.#validate(calscaleValue);\n    this.#calscaleValue = calscaleValue;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(CalscaleParameter);\n"],"names":["CalscaleParameter","calscaleValue","checkAbstractPropertiesAndMethods","Object","freeze","repr","reprXML","reprJSON","BaseParameter","MissingArgument","constructor","identifier","test","InvalidArgument"],"mappings":";;;;;;;;;;;AAGA,IAAaA,iBAAb,gBAAA,UAAA,cAAA,EAAA;AAAA,EAAA,SAAA,CAAA,iBAAA,EAAA,cAAA,CAAA,CAAA;;AAAA,EAAA,IAAA,MAAA,GAAA,YAAA,CAAA,iBAAA,CAAA,CAAA;;AA8BE,EAAA,SAAA,iBAAA,CAAYC,eAAZ,EAA2B;AAAA,IAAA,IAAA,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,iBAAA,CAAA,CAAA;;AACzB,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;;AADyB,IAAA,2BAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,SAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,cAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,eAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;MAAA,KAzBT,EAAA,oCAAA;AAyBS,KAAA,CAAA,CAAA;;AAGzB,IAAA,sBAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,SAAA,EAAA,UAAA,CAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAeA,eAAf,CAAA,CAAA;;AACA,IAAA,qBAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,cAAA,EAAsBA,eAAtB,CAAA,CAAA;;AAEA,IAAA,KAAA,CAAKC,iCAAL,EAAA,CAAA;;AACAC,IAAAA,MAAM,CAACC,MAAP,CAAA,sBAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AAPyB,IAAA,OAAA,KAAA,CAAA;AAQ1B,GAAA;;AAtCH,EAAA,YAAA,CAAA,iBAAA,EAAA,CAAA;AAAA,IAAA,GAAA,EAAA,OAAA;AAAA,IAAA,GAAA,EAOE,SAAY,GAAA,GAAA;MACV,OAAO,qBAAA,CAAA,IAAA,EAAA,cAAA,CAAA,CAAoBC,IAApB,EAAP,CAAA;AACD,KAAA;AATH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,UAAA;AAAA,IAAA,GAAA,EAWE,SAAe,GAAA,GAAA;MACb,OAAO,qBAAA,CAAA,IAAA,EAAA,cAAA,CAAA,CAAoBC,OAApB,EAAP,CAAA;AACD,KAAA;AAbH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,WAAA;AAAA,IAAA,GAAA,EAeE,SAAgB,GAAA,GAAA;MACd,OAAO,qBAAA,CAAA,IAAA,EAAA,cAAA,CAAA,CAAoBC,QAApB,EAAP,CAAA;AACD,KAAA;AAjBH,GAAA,CAAA,CAAA,CAAA;;AAAA,EAAA,OAAA,iBAAA,CAAA;AAAA,CAAA,CAAuCC,aAAvC,EAAA;;AAmBYP,SAAAA,UAAAA,CAAAA,eAAe;EACvB,IAAI,OAAOA,aAAP,KAAyB,WAA7B,EACE,MAAM,IAAIQ,eAAJ,CAAoB,8CAApB,CAAN,CADF,KAEK,IAAIR,aAAa,CAACS,WAAd,CAA0BC,UAA1B,KAAyC,oBAA7C,EACH,MAAM,IAAIF,eAAJ,CACJ,6DADI,CAAN,CADG,KAIA,IAAI,CAAC,6CAAqBG,IAArB,CAA0BX,aAAa,CAACI,IAAd,EAA1B,CAAL,EACH,MAAM,IAAIQ,eAAJ,CAAoB,wBAApB,CAAN,CAAA;AACH,CAAA;;AA5BUb,eAAAA,CAAAA,4BACI;;AADJA,eAAAA,CAAAA,iCAES;;AAuCtBG,MAAM,CAACC,MAAP,CAAcJ,iBAAd,CAAA;;;;"}