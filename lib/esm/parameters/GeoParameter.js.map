{"version":3,"file":"GeoParameter.js","sources":["../../../src/parameters/GeoParameter.js"],"sourcesContent":["import { BaseParameter } from \"./BaseParameter.js\";\nimport { MissingArgument } from \"../errors/index.js\";\n\nexport class GeoParameter extends BaseParameter {\n  static param = \"GEO\";\n  static identifier = \"GeoParameter\";\n\n  #geoValue;\n\n  get value() {\n    return `\"${this.#geoValue.repr()}\"`;\n  }\n\n  get valueXML() {\n    return this.#geoValue.reprXML();\n  }\n\n  get valueJSON() {\n    return this.#geoValue.reprJSON();\n  }\n\n  #validate(geoValue) {\n    if (typeof geoValue === \"undefined\")\n      throw new MissingArgument(\"Value for GeoParameter must be supplied\");\n    else if (geoValue.constructor.identifier !== \"URIType\")\n      throw new TypeError(\"Value for GeoParameter must be of type URIType\");\n  }\n\n  constructor(geoValue) {\n    super();\n\n    this.#validate(geoValue);\n    this.#geoValue = geoValue;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(GeoParameter);\n"],"names":["_geoValue","WeakMap","_validate","WeakSet","GeoParameter","_BaseParameter","_inherits","_super","_createSuper","geoValue","_this","_classCallCheck","call","_classPrivateMethodInitSpec","_assertThisInitialized","_classPrivateFieldInitSpec","writable","value","_classPrivateMethodGet","_validate2","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_createClass","key","get","concat","_classPrivateFieldGet","repr","reprXML","reprJSON","BaseParameter","MissingArgument","constructor","identifier","TypeError","_defineProperty"],"mappings":";;;;AACqD,IAAAA,SAAA,oBAAAC,OAAA,EAAA,CAAA;AAAA,IAAAC,SAAA,oBAAAC,OAAA,EAAA,CAAA;AAExCC,IAAAA,YAAY,0BAAAC,cAAA,EAAA;EAAAC,SAAA,CAAAF,YAAA,EAAAC,cAAA,CAAA,CAAA;AAAA,EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,YAAA,CAAA,CAAA;EAyBvB,SAAAA,YAAAA,CAAYK,UAAQ,EAAE;AAAA,IAAA,IAAAC,KAAA,CAAA;AAAAC,IAAAA,eAAA,OAAAP,YAAA,CAAA,CAAA;IACpBM,KAAA,GAAAH,MAAA,CAAAK,IAAA,CAAA,IAAA,CAAA,CAAA;AAAQC,IAAAA,2BAAA,CAAAC,sBAAA,CAAAJ,KAAA,GAAAR,SAAA,CAAA,CAAA;AAAAa,IAAAA,0BAAA,CAAAD,sBAAA,CAAAJ,KAAA,GAAAV,SAAA,EAAA;MAAAgB,QAAA,EAAA,IAAA;MAAAC,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;AAERC,IAAAA,sBAAA,CAAAJ,sBAAA,CAAAJ,KAAA,GAAAR,SAAA,EAAAiB,UAAA,CAAA,CAAAP,IAAA,CAAAE,sBAAA,CAAAJ,KAAA,GAAeD,UAAQ,CAAA,CAAA;AACvBW,IAAAA,qBAAA,CAAAN,sBAAA,CAAAJ,KAAA,CAAAV,EAAAA,SAAA,EAAiBS,UAAQ,CAAA,CAAA;IAEzBC,KAAA,CAAKW,iCAAiC,EAAE,CAAA;AACxCC,IAAAA,MAAM,CAACC,MAAM,CAAAT,sBAAA,CAAAJ,KAAA,CAAK,CAAC,CAAA;AAAC,IAAA,OAAAA,KAAA,CAAA;AACtB,GAAA;AAACc,EAAAA,YAAA,CAAApB,YAAA,EAAA,CAAA;IAAAqB,GAAA,EAAA,OAAA;IAAAC,GAAA,EA3BD,SAAAA,GAAAA,GAAY;MACV,OAAAC,IAAAA,CAAAA,MAAA,CAAWC,qBAAA,CAAA,IAAI,EAAA5B,SAAA,CAAA,CAAW6B,IAAI,EAAE,EAAA,IAAA,CAAA,CAAA;AAClC,KAAA;AAAC,GAAA,EAAA;IAAAJ,GAAA,EAAA,UAAA;IAAAC,GAAA,EAED,SAAAA,GAAAA,GAAe;AACb,MAAA,OAAOE,qBAAA,CAAI,IAAA,EAAA5B,SAAA,CAAW8B,CAAAA,OAAO,EAAE,CAAA;AACjC,KAAA;AAAC,GAAA,EAAA;IAAAL,GAAA,EAAA,WAAA;IAAAC,GAAA,EAED,SAAAA,GAAAA,GAAgB;AACd,MAAA,OAAOE,qBAAA,CAAI,IAAA,EAAA5B,SAAA,CAAW+B,CAAAA,QAAQ,EAAE,CAAA;AAClC,KAAA;AAAC,GAAA,CAAA,CAAA,CAAA;AAAA,EAAA,OAAA3B,YAAA,CAAA;AAAA,CAAA,CAhB+B4B,aAAa,EAAA;AAkC9C,SAAAb,UAAAA,CAhBWV,QAAQ,EAAE;EAClB,IAAI,OAAOA,QAAQ,KAAK,WAAW,EACjC,MAAM,IAAIwB,eAAe,CAAC,yCAAyC,CAAC,CAAC,KAClE,IAAIxB,QAAQ,CAACyB,WAAW,CAACC,UAAU,KAAK,SAAS,EACpD,MAAM,IAAIC,SAAS,CAAC,gDAAgD,CAAC,CAAA;AACzE,CAAA;AAACC,eAAA,CAvBUjC,YAAY,EAAA,OAAA,EACR,KAAK,CAAA,CAAA;AAAAiC,eAAA,CADTjC,YAAY,EAAA,YAAA,EAEH,cAAc,CAAA,CAAA;AAkCpCkB,MAAM,CAACC,MAAM,CAACnB,YAAY,CAAC;;;;"}