{"version":3,"file":"PIDParameter.js","sources":["../../../src/parameters/PIDParameter.js"],"sourcesContent":["import { BaseParameter } from \"./BaseParameter.js\";\r\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\r\n\r\nexport class PIDParameter extends BaseParameter {\r\n  static param = \"PID\";\r\n  static identifier = \"PIDParameter\";\r\n\r\n  #pidValue;\r\n  #pidRegExp = /^\\d+(?:\\.\\d+)?$/;\r\n\r\n  get value() {\r\n    return Array.isArray(this.#pidValue)\r\n      ? this.#pidValue\r\n          .map((val) => {\r\n            if (Array.isArray(val))\r\n              return val.map((innerVal) => innerVal.repr()).join(\".\");\r\n            return val.repr();\r\n          })\r\n          .join(\",\")\r\n      : this.#pidValue.repr();\r\n  }\r\n\r\n  get valueXML() {\r\n    const xml = Array.isArray(this.#pidValue)\r\n      ? this.#pidValue\r\n          .map((val) => {\r\n            if (Array.isArray(val))\r\n              return (\r\n                \"<integer>\" +\r\n                val.map((innerVal) => innerVal.repr()).join(\".\") +\r\n                \"</integer>\"\r\n              );\r\n\r\n            return val.reprXML();\r\n          })\r\n          .join(\"\")\r\n      : this.#pidValue.reprXML();\r\n\r\n    return xml.replaceAll(\"integer\", \"text\");\r\n  }\r\n\r\n  get valueJSON() {\r\n    return Array.isArray(this.#pidValue)\r\n      ? [\r\n          \"integer\",\r\n          ...this.#pidValue.map((val) => {\r\n            if (Array.isArray(val))\r\n              return Number(val.map((innerVal) => innerVal.repr()).join(\".\"));\r\n            return val.reprJSON().pop();\r\n          }),\r\n        ]\r\n      : this.#pidValue.reprJSON();\r\n  }\r\n\r\n  #validate(pidValue) {\r\n    if (typeof pidValue === \"undefined\")\r\n      throw new MissingArgument(\"Value for PIDParameter must be supplied\");\r\n    else if (\r\n      !Array.isArray(pidValue) &&\r\n      pidValue.constructor.identifier !== \"IntegerType\"\r\n    )\r\n      throw new InvalidArgument(\"Invalid value for PIDParameter\");\r\n    else if (\r\n      Array.isArray(pidValue) &&\r\n      !pidValue.every((val1) => {\r\n        if (Array.isArray(val1))\r\n          return (\r\n            val1.length === 2 &&\r\n            val1.every((val2) => val2.constructor.identifier === \"IntegerType\")\r\n          );\r\n        return val1.constructor.identifier === \"IntegerType\";\r\n      })\r\n    )\r\n      throw new InvalidArgument(\"Invalid value for PIDParameter\");\r\n  }\r\n\r\n  constructor(pidValue) {\r\n    super();\r\n\r\n    this.#validate(pidValue);\r\n    this.#pidValue = pidValue;\r\n\r\n    this.checkAbstractPropertiesAndMethods();\r\n    Object.freeze(this);\r\n  }\r\n}\r\n\r\nObject.freeze(PIDParameter);\r\n"],"names":["_pidValue","WeakMap","_pidRegExp","_PIDParameter_brand","WeakSet","PIDParameter","_BaseParameter","pidValue","_this","_classCallCheck","_callSuper","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_assertClassBrand","_validate","call","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_inherits","_createClass","key","get","Array","isArray","_classPrivateFieldGet","map","val","innerVal","repr","join","xml","reprXML","replaceAll","concat","_toConsumableArray","Number","reprJSON","pop","BaseParameter","MissingArgument","constructor","identifier","InvalidArgument","every","val1","length","val2","_defineProperty"],"mappings":";;;;;AACsE,IAAAA,SAAA,oBAAAC,OAAA,EAAA,CAAA;AAAA,IAAAC,UAAA,oBAAAD,OAAA,EAAA,CAAA;AAAA,IAAAE,mBAAA,oBAAAC,OAAA,EAAA,CAAA;AAEzDC,IAAAA,YAAY,0BAAAC,cAAA,EAAA;EAyEvB,SAAAD,YAAAA,CAAYE,UAAQ,EAAE;AAAA,IAAA,IAAAC,KAAA,CAAA;AAAAC,IAAAA,eAAA,OAAAJ,YAAA,CAAA,CAAA;IACpBG,KAAA,GAAAE,UAAA,CAAA,IAAA,EAAAL,YAAA,CAAA,CAAA;IAAQM,2BAAA,CAAAH,KAAA,EAAAL,mBAAA,CAAA,CAAA;IAtEVS,0BAAA,CAAAJ,KAAA,EAAAR,SAAS,EAAA,KAAA,CAAA,CAAA,CAAA;AACTY,IAAAA,0BAAA,CAAAJ,KAAA,EAAAN,UAAU,EAAG,iBAAiB,CAAA,CAAA;AAuE5BW,IAAAA,iBAAA,CAAAV,mBAAA,EAAAK,KAAA,EAAKM,SAAQ,CAAC,CAAAC,IAAA,CAAAP,KAAA,EAACD,UAAQ,CAAA,CAAA;AACvBS,IAAAA,sBAAA,CAAKhB,SAAS,EAAAQ,KAAA,EAAGD,UAAJ,CAAC,CAAA;IAEdC,KAAA,CAAKS,iCAAiC,EAAE,CAAA;AACxCC,IAAAA,MAAM,CAACC,MAAM,CAAAX,KAAK,CAAC,CAAA;AAAC,IAAA,OAAAA,KAAA,CAAA;AACtB,GAAA;EAACY,SAAA,CAAAf,YAAA,EAAAC,cAAA,CAAA,CAAA;EAAA,OAAAe,YAAA,CAAAhB,YAAA,EAAA,CAAA;IAAAiB,GAAA,EAAA,OAAA;IAAAC,GAAA,EA1ED,SAAAA,GAAAA,GAAY;MACV,OAAOC,KAAK,CAACC,OAAO,CAACC,sBAAA,CAAK1B,SAAS,EAAd,IAAa,CAAC,CAAC,GAChC0B,sBAAA,CAAK1B,SAAS,EAAd,IAAa,CAAC,CACX2B,GAAG,CAAC,UAACC,GAAG,EAAK;AACZ,QAAA,IAAIJ,KAAK,CAACC,OAAO,CAACG,GAAG,CAAC,EACpB,OAAOA,GAAG,CAACD,GAAG,CAAC,UAACE,QAAQ,EAAA;AAAA,UAAA,OAAKA,QAAQ,CAACC,IAAI,EAAE,CAAA;AAAA,SAAA,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAA;AACzD,QAAA,OAAOH,GAAG,CAACE,IAAI,EAAE,CAAA;AACnB,OAAC,CAAC,CACDC,IAAI,CAAC,GAAG,CAAC,GACZL,sBAAA,CAAK1B,SAAS,EAAd,IAAa,CAAC,CAAC8B,IAAI,EAAE,CAAA;AAC3B,KAAA;AAAC,GAAA,EAAA;IAAAR,GAAA,EAAA,UAAA;IAAAC,GAAA,EAED,SAAAA,GAAAA,GAAe;MACb,IAAMS,GAAG,GAAGR,KAAK,CAACC,OAAO,CAACC,sBAAA,CAAK1B,SAAS,EAAd,IAAa,CAAC,CAAC,GACrC0B,sBAAA,CAAK1B,SAAS,EAAd,IAAa,CAAC,CACX2B,GAAG,CAAC,UAACC,GAAG,EAAK;AACZ,QAAA,IAAIJ,KAAK,CAACC,OAAO,CAACG,GAAG,CAAC,EACpB,OACE,WAAW,GACXA,GAAG,CAACD,GAAG,CAAC,UAACE,QAAQ,EAAA;AAAA,UAAA,OAAKA,QAAQ,CAACC,IAAI,EAAE,CAAA;AAAA,SAAA,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,GAChD,YAAY,CAAA;AAGhB,QAAA,OAAOH,GAAG,CAACK,OAAO,EAAE,CAAA;AACtB,OAAC,CAAC,CACDF,IAAI,CAAC,EAAE,CAAC,GACXL,sBAAA,CAAK1B,SAAS,EAAd,IAAa,CAAC,CAACiC,OAAO,EAAE,CAAA;AAE5B,MAAA,OAAOD,GAAG,CAACE,UAAU,CAAC,SAAS,EAAE,MAAM,CAAC,CAAA;AAC1C,KAAA;AAAC,GAAA,EAAA;IAAAZ,GAAA,EAAA,WAAA;IAAAC,GAAA,EAED,SAAAA,GAAAA,GAAgB;AACd,MAAA,OAAOC,KAAK,CAACC,OAAO,CAACC,sBAAA,CAAK1B,SAAS,EAAd,IAAa,CAAC,CAAC,GAAA,CAE9B,SAAS,CAAA,CAAAmC,MAAA,CAAAC,kBAAA,CACNV,sBAAA,CAAK1B,SAAS,EAAd,IAAa,CAAC,CAAC2B,GAAG,CAAC,UAACC,GAAG,EAAK;AAC7B,QAAA,IAAIJ,KAAK,CAACC,OAAO,CAACG,GAAG,CAAC,EACpB,OAAOS,MAAM,CAACT,GAAG,CAACD,GAAG,CAAC,UAACE,QAAQ,EAAA;AAAA,UAAA,OAAKA,QAAQ,CAACC,IAAI,EAAE,CAAA;AAAA,SAAA,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;QACjE,OAAOH,GAAG,CAACU,QAAQ,EAAE,CAACC,GAAG,EAAE,CAAA;OAC5B,CAAC,CAEJb,CAAAA,GAAAA,sBAAA,CAAK1B,SAAS,EAAd,IAAa,CAAC,CAACsC,QAAQ,EAAE,CAAA;AAC/B,KAAA;AAAC,GAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CAjD+BE,aAAa,EAAA;AAkF9C,SAAA1B,SAAAA,CA/BWP,QAAQ,EAAE;EAClB,IAAI,OAAOA,QAAQ,KAAK,WAAW,EACjC,MAAM,IAAIkC,eAAe,CAAC,yCAAyC,CAAC,CAAC,KAClE,IACH,CAACjB,KAAK,CAACC,OAAO,CAAClB,QAAQ,CAAC,IACxBA,QAAQ,CAACmC,WAAW,CAACC,UAAU,KAAK,aAAa,EAEjD,MAAM,IAAIC,eAAe,CAAC,gCAAgC,CAAC,CAAC,KACzD,IACHpB,KAAK,CAACC,OAAO,CAAClB,QAAQ,CAAC,IACvB,CAACA,QAAQ,CAACsC,KAAK,CAAC,UAACC,IAAI,EAAK;AACxB,IAAA,IAAItB,KAAK,CAACC,OAAO,CAACqB,IAAI,CAAC,EACrB,OACEA,IAAI,CAACC,MAAM,KAAK,CAAC,IACjBD,IAAI,CAACD,KAAK,CAAC,UAACG,IAAI,EAAA;AAAA,MAAA,OAAKA,IAAI,CAACN,WAAW,CAACC,UAAU,KAAK,aAAa,CAAA;KAAC,CAAA,CAAA;AAEvE,IAAA,OAAOG,IAAI,CAACJ,WAAW,CAACC,UAAU,KAAK,aAAa,CAAA;AACtD,GAAC,CAAC,EAEF,MAAM,IAAIC,eAAe,CAAC,gCAAgC,CAAC,CAAA;AAC/D,CAAA;AAACK,eAAA,CAvEU5C,YAAY,EAAA,OAAA,EACR,KAAK,CAAA,CAAA;AAAA4C,eAAA,CADT5C,YAAY,EAAA,YAAA,EAEH,cAAc,CAAA,CAAA;AAkFpCa,MAAM,CAACC,MAAM,CAACd,YAAY,CAAC;;;;"}