{"version":3,"file":"MediatypeParameter.js","sources":["../../../src/parameters/MediatypeParameter.js"],"sourcesContent":["import { BaseParameter } from \"./BaseParameter.js\";\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\n\nexport class MediatypeParameter extends BaseParameter {\n  static param = \"MEDIATYPE\";\n  static identifier = \"MediatypeParameter\";\n\n  #mediaTypeRegExp =\n    /^(?:[A-Za-z0-9!#\\$&\\.\\+\\-\\^_]){1,127}\\/(?:[A-Za-z0-9!#\\$&\\.\\+\\-\\^_]){1,127}$/;\n  #attributeRegExp = /^[A-Za-z0-9!#\\$&\\.\\+\\-\\^_]+=[A-Za-z0-9!#\\$&\\.\\+\\-\\^_]+$/;\n  #mediaValue;\n\n  get value() {\n    return Array.isArray(this.#mediaValue)\n      ? `\"${this.#mediaValue.map((val) => val.repr()).join(\";\")}\"`\n      : this.#mediaValue.repr();\n  }\n\n  get valueXML() {\n    return Array.isArray(this.#mediaValue)\n      ? \"<text>\" +\n          this.#mediaValue\n            .map((val) => val.reprXML())\n            .join(\";\")\n            .replace(/<\\/?text>/g, \"\") +\n          \"</text>\"\n      : this.#mediaValue.reprXML();\n  }\n\n  get valueJSON() {\n    if (Array.isArray(this.#mediaValue))\n      return [\n        \"text\",\n        this.#mediaValue.map((val) => val._unsafe_raw_value).join(\";\"),\n      ];\n\n    return this.#mediaValue.reprJSON();\n  }\n\n  #validate(mediaValue) {\n    if (typeof mediaValue === \"undefined\")\n      throw new MissingArgument(\n        \"Value for MediatypeParameter must be supplied\"\n      );\n    else if (\n      (!Array.isArray(mediaValue) &&\n        mediaValue.constructor.identifier !== \"ParameterValueType\") ||\n      (Array.isArray(mediaValue) &&\n        !mediaValue.every(\n          (val) => val.constructor.identifier === \"ParameterValueType\"\n        ))\n    )\n      throw new TypeError(\n        \"Value for MediatypeParameter must be of ParameterValueType or an array of ParameterValueTypes\"\n      );\n    else if (\n      !Array.isArray(mediaValue) &&\n      !this.#mediaTypeRegExp.test(mediaValue.repr())\n    )\n      throw new InvalidArgument(\"Invalid media type\");\n    else if (Array.isArray(mediaValue)) {\n      if (mediaValue.length !== 2)\n        throw new InvalidArgument(\n          \"Invalid value for MediatypeParameter. It should be an array with a length of 2\"\n        );\n      else if (!this.#mediaTypeRegExp.test(mediaValue[0].repr()))\n        throw new InvalidArgument(\"Invalid media type\");\n      else if (!this.#attributeRegExp.test(mediaValue[1].repr()))\n        throw new InvalidArgument(\"Invalid media type\");\n    }\n  }\n\n  constructor(mediaValue) {\n    super();\n\n    this.#validate(mediaValue);\n    this.#mediaValue = mediaValue;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(MediatypeParameter);\n"],"names":["MediatypeParameter","mediaValue","checkAbstractPropertiesAndMethods","Object","freeze","Array","isArray","map","val","repr","join","reprXML","replace","_unsafe_raw_value","reprJSON","BaseParameter","MissingArgument","constructor","identifier","every","TypeError","test","InvalidArgument","length"],"mappings":"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"}