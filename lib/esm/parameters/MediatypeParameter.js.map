{"version":3,"file":"MediatypeParameter.js","sources":["../../../src/parameters/MediatypeParameter.js"],"sourcesContent":["import { BaseParameter } from \"./BaseParameter.js\";\r\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\r\n\r\nexport class MediatypeParameter extends BaseParameter {\r\n  static param = \"MEDIATYPE\";\r\n  static identifier = \"MediatypeParameter\";\r\n\r\n  #mediaTypeRegExp =\r\n    /^(?:[A-Za-z0-9!#\\$&\\.\\+\\-\\^_]){1,127}\\/(?:[A-Za-z0-9!#\\$&\\.\\+\\-\\^_]){1,127}$/;\r\n  #attributeRegExp = /^[A-Za-z0-9!#\\$&\\.\\+\\-\\^_]+=[A-Za-z0-9!#\\$&\\.\\+\\-\\^_]+$/;\r\n  #mediaValue;\r\n\r\n  get value() {\r\n    return Array.isArray(this.#mediaValue)\r\n      ? `\"${this.#mediaValue.map((val) => val.repr()).join(\";\")}\"`\r\n      : this.#mediaValue.repr();\r\n  }\r\n\r\n  get valueXML() {\r\n    return Array.isArray(this.#mediaValue)\r\n      ? \"<text>\" +\r\n          this.#mediaValue\r\n            .map((val) => val.reprXML())\r\n            .join(\";\")\r\n            .replace(/<\\/?text>/g, \"\") +\r\n          \"</text>\"\r\n      : this.#mediaValue.reprXML();\r\n  }\r\n\r\n  get valueJSON() {\r\n    if (Array.isArray(this.#mediaValue))\r\n      return [\r\n        \"text\",\r\n        this.#mediaValue.map((val) => val._unsafe_raw_value).join(\";\"),\r\n      ];\r\n\r\n    return this.#mediaValue.reprJSON();\r\n  }\r\n\r\n  #validate(mediaValue) {\r\n    if (typeof mediaValue === \"undefined\")\r\n      throw new MissingArgument(\r\n        \"Value for MediatypeParameter must be supplied\"\r\n      );\r\n    else if (\r\n      (!Array.isArray(mediaValue) &&\r\n        mediaValue.constructor.identifier !== \"ParameterValueType\") ||\r\n      (Array.isArray(mediaValue) &&\r\n        !mediaValue.every(\r\n          (val) => val.constructor.identifier === \"ParameterValueType\"\r\n        ))\r\n    )\r\n      throw new TypeError(\r\n        \"Value for MediatypeParameter must be of ParameterValueType or an array of ParameterValueTypes\"\r\n      );\r\n    else if (\r\n      !Array.isArray(mediaValue) &&\r\n      !this.#mediaTypeRegExp.test(mediaValue.repr())\r\n    )\r\n      throw new InvalidArgument(\"Invalid media type\");\r\n    else if (Array.isArray(mediaValue)) {\r\n      if (mediaValue.length !== 2)\r\n        throw new InvalidArgument(\r\n          \"Invalid value for MediatypeParameter. It should be an array with a length of 2\"\r\n        );\r\n      else if (!this.#mediaTypeRegExp.test(mediaValue[0].repr()))\r\n        throw new InvalidArgument(\"Invalid media type\");\r\n      else if (!this.#attributeRegExp.test(mediaValue[1].repr()))\r\n        throw new InvalidArgument(\"Invalid media type\");\r\n    }\r\n  }\r\n\r\n  constructor(mediaValue) {\r\n    super();\r\n\r\n    this.#validate(mediaValue);\r\n    this.#mediaValue = mediaValue;\r\n\r\n    this.checkAbstractPropertiesAndMethods();\r\n    Object.freeze(this);\r\n  }\r\n}\r\n\r\nObject.freeze(MediatypeParameter);\r\n"],"names":["_mediaTypeRegExp","WeakMap","_attributeRegExp","_mediaValue","_MediatypeParameter_brand","WeakSet","MediatypeParameter","_BaseParameter","mediaValue","_this","_classCallCheck","_callSuper","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_assertClassBrand","_validate","call","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_inherits","_createClass","key","get","Array","isArray","_classPrivateFieldGet","concat","map","val","repr","join","reprXML","replace","_unsafe_raw_value","reprJSON","BaseParameter","MissingArgument","constructor","identifier","every","TypeError","test","InvalidArgument","length","_defineProperty"],"mappings":"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"}