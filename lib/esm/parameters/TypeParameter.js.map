{"version":3,"file":"TypeParameter.js","sources":["../../../src/parameters/TypeParameter.js"],"sourcesContent":["import { BaseParameter } from \"./BaseParameter.js\";\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\n\nexport class TypeParameter extends BaseParameter {\n  static param = \"TYPE\";\n  static identifier = \"TypeParameter\";\n\n  #typeValue;\n\n  get value() {\n    return Array.isArray(this.#typeValue)\n      ? `\"${this.#typeValue\n          .map((val) => val.repr())\n          .join(\",\")\n          .replaceAll('\"', \"\")}\"`\n      : this.#typeValue.repr();\n  }\n\n  get valueXML() {\n    return Array.isArray(this.#typeValue)\n      ? this.#typeValue.map((val) => val.reprXML()).join(\"\")\n      : this.#typeValue.reprXML();\n  }\n\n  get valueJSON() {\n    return Array.isArray(this.#typeValue)\n      ? [\"text\", ...this.#typeValue.map((val) => val._unsafe_raw_value)]\n      : this.#typeValue.reprJSON();\n  }\n\n  #typeRegExp = /^(?:work|home|x-[a-z0-9-]+)$/i;\n\n  #telTypeRegExp = /^(?:text|voice|fax|cell|video|pager|textphone|main)$/i;\n\n  #relatedTypeRegExp =\n    /(?:contact|acquaintance|friend|met|co-worker|colleague|co-resident|neighbor|child|parent|sibling|spouse|kin|muse|crush|date|sweetheart|me|agent|emergency)/i;\n\n  #validate(typeValue, targetProp) {\n    if (typeof typeValue === \"undefined\" || typeof targetProp === \"undefined\")\n      throw new MissingArgument(\n        \"Value and target property for TypeParameter must be supplied\"\n      );\n    else if (\n      !(\n        !Array.isArray(typeValue) &&\n        typeValue.constructor.identifier === \"ParameterValueType\"\n      ) &&\n      !(\n        Array.isArray(typeValue) &&\n        typeValue.every(\n          (val) => val.constructor.identifier === \"ParameterValueType\"\n        )\n      )\n    )\n      throw new TypeError(\n        \"Value for TypeParameter must be of type ParameterValueType or an array of ParameterValueTypes\"\n      );\n\n    const telre = new RegExp(\n      `(?:${this.#telTypeRegExp.source}|${this.#typeRegExp.source})`,\n      \"i\"\n    );\n    const relatedre = new RegExp(\n      `(?:${this.#relatedTypeRegExp.source}|${this.#typeRegExp.source})`,\n      \"i\"\n    );\n\n    switch (true) {\n      case /^TelProperty$/i.test(targetProp):\n        if (\n          !(!Array.isArray(typeValue) && telre.test(typeValue.repr())) &&\n          !(\n            Array.isArray(typeValue) &&\n            typeValue.every((type) => telre.test(type.repr()))\n          )\n        )\n          throw new InvalidArgument(\n            \"Invalid value for TypeParameter for TelProperty\"\n          );\n\n        break;\n      case /^RelatedProperty$/i.test(targetProp):\n        if (\n          !(!Array.isArray(typeValue) && relatedre.test(typeValue.repr())) &&\n          !(\n            Array.isArray(typeValue) &&\n            typeValue.every((type) => relatedre.test(type.repr()))\n          )\n        )\n          throw new InvalidArgument(\n            \"Invalid value for TypeParameter for RelatedProperty\"\n          );\n\n        break;\n      default:\n        if (\n          !(\n            !Array.isArray(typeValue) && this.#typeRegExp.test(typeValue.repr())\n          ) &&\n          !(\n            Array.isArray(typeValue) &&\n            typeValue.every((type) => this.#typeRegExp.test(type.repr()))\n          )\n        )\n          throw new InvalidArgument(\"Invalid value for TypeParameter\");\n    }\n  }\n\n  constructor(typeValue, targetProp) {\n    super();\n\n    this.#validate(typeValue, targetProp);\n    this.#typeValue = typeValue;\n\n    this.targetProp = targetProp.toUpperCase();\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(TypeParameter);\n"],"names":["TypeParameter","typeValue","targetProp","toUpperCase","checkAbstractPropertiesAndMethods","Object","freeze","Array","isArray","map","val","repr","join","replaceAll","reprXML","_unsafe_raw_value","reprJSON","BaseParameter","MissingArgument","constructor","identifier","every","TypeError","telre","RegExp","source","relatedre","test","type","InvalidArgument"],"mappings":"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"}