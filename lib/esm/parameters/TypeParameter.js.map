{"version":3,"file":"TypeParameter.js","sources":["../../../src/parameters/TypeParameter.js"],"sourcesContent":["import { BaseParameter } from \"./BaseParameter.js\";\r\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\r\n\r\nexport class TypeParameter extends BaseParameter {\r\n  static param = \"TYPE\";\r\n  static identifier = \"TypeParameter\";\r\n\r\n  #typeValue;\r\n\r\n  get value() {\r\n    return Array.isArray(this.#typeValue)\r\n      ? `\"${this.#typeValue\r\n          .map((val) => val.repr())\r\n          .join(\",\")\r\n          .replaceAll('\"', \"\")}\"`\r\n      : this.#typeValue.repr();\r\n  }\r\n\r\n  get valueXML() {\r\n    return Array.isArray(this.#typeValue)\r\n      ? this.#typeValue.map((val) => val.reprXML()).join(\"\")\r\n      : this.#typeValue.reprXML();\r\n  }\r\n\r\n  get valueJSON() {\r\n    return Array.isArray(this.#typeValue)\r\n      ? [\"text\", ...this.#typeValue.map((val) => val._unsafe_raw_value)]\r\n      : this.#typeValue.reprJSON();\r\n  }\r\n\r\n  #typeRegExp = /^(?:work|home|x-[a-z0-9-]+)$/i;\r\n\r\n  #telTypeRegExp = /^(?:text|voice|fax|cell|video|pager|textphone|main)$/i;\r\n\r\n  #relatedTypeRegExp =\r\n    /(?:contact|acquaintance|friend|met|co-worker|colleague|co-resident|neighbor|child|parent|sibling|spouse|kin|muse|crush|date|sweetheart|me|agent|emergency)/i;\r\n\r\n  #validate(targetProp, typeValue) {\r\n    if (typeof typeValue === \"undefined\" || typeof targetProp === \"undefined\")\r\n      throw new MissingArgument(\r\n        \"Value and target property for TypeParameter must be supplied\"\r\n      );\r\n    else if (\r\n      !(\r\n        !Array.isArray(typeValue) &&\r\n        typeValue.constructor.identifier === \"ParameterValueType\"\r\n      ) &&\r\n      !(\r\n        Array.isArray(typeValue) &&\r\n        typeValue.every(\r\n          (val) => val.constructor.identifier === \"ParameterValueType\"\r\n        )\r\n      )\r\n    )\r\n      throw new TypeError(\r\n        \"Value for TypeParameter must be of type ParameterValueType or an array of ParameterValueTypes\"\r\n      );\r\n\r\n    const telre = new RegExp(\r\n      `(?:${this.#telTypeRegExp.source}|${this.#typeRegExp.source})`,\r\n      \"i\"\r\n    );\r\n    const relatedre = new RegExp(\r\n      `(?:${this.#relatedTypeRegExp.source}|${this.#typeRegExp.source})`,\r\n      \"i\"\r\n    );\r\n\r\n    switch (true) {\r\n      case /^TelProperty$/i.test(targetProp):\r\n        if (\r\n          !(!Array.isArray(typeValue) && telre.test(typeValue.repr())) &&\r\n          !(\r\n            Array.isArray(typeValue) &&\r\n            typeValue.every((type) => telre.test(type.repr()))\r\n          )\r\n        )\r\n          throw new InvalidArgument(\r\n            \"Invalid value for TypeParameter for TelProperty\"\r\n          );\r\n\r\n        break;\r\n      case /^RelatedProperty$/i.test(targetProp):\r\n        if (\r\n          !(!Array.isArray(typeValue) && relatedre.test(typeValue.repr())) &&\r\n          !(\r\n            Array.isArray(typeValue) &&\r\n            typeValue.every((type) => relatedre.test(type.repr()))\r\n          )\r\n        )\r\n          throw new InvalidArgument(\r\n            \"Invalid value for TypeParameter for RelatedProperty\"\r\n          );\r\n\r\n        break;\r\n      default:\r\n        if (\r\n          !(\r\n            !Array.isArray(typeValue) && this.#typeRegExp.test(typeValue.repr())\r\n          ) &&\r\n          !(\r\n            Array.isArray(typeValue) &&\r\n            typeValue.every((type) => this.#typeRegExp.test(type.repr()))\r\n          )\r\n        )\r\n          throw new InvalidArgument(\"Invalid value for TypeParameter\");\r\n    }\r\n  }\r\n\r\n  constructor(targetProp, typeValue) {\r\n    super();\r\n\r\n    this.#validate(targetProp, typeValue);\r\n    this.#typeValue = typeValue;\r\n\r\n    this.targetProp = targetProp.toUpperCase();\r\n\r\n    this.checkAbstractPropertiesAndMethods();\r\n    Object.freeze(this);\r\n  }\r\n}\r\n\r\nObject.freeze(TypeParameter);\r\n"],"names":["_typeValue","WeakMap","_typeRegExp","_telTypeRegExp","_relatedTypeRegExp","_TypeParameter_brand","WeakSet","TypeParameter","_BaseParameter","targetProp","typeValue","_this","_classCallCheck","_callSuper","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_assertClassBrand","_validate","call","_classPrivateFieldSet","toUpperCase","checkAbstractPropertiesAndMethods","Object","freeze","_inherits","_createClass","key","get","Array","isArray","_classPrivateFieldGet","concat","map","val","repr","join","replaceAll","reprXML","_toConsumableArray","_unsafe_raw_value","reprJSON","BaseParameter","_this2","MissingArgument","constructor","identifier","every","TypeError","telre","RegExp","source","relatedre","test","type","InvalidArgument","_defineProperty"],"mappings":"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"}