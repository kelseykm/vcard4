{"version":3,"file":"AnyParameter.js","sources":["../../../src/parameters/AnyParameter.js"],"sourcesContent":["import { BaseParameter } from \"./BaseParameter.js\";\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\n\nexport class AnyParameter extends BaseParameter {\n  static identifier = \"AnyParameter\";\n\n  #value;\n  #param;\n\n  get param() {\n    return `${this.#param}`;\n  }\n\n  get value() {\n    return this.#value.repr();\n  }\n\n  get valueXML() {\n    return this.#value.reprXML();\n  }\n\n  get valueJSON() {\n    return this.#value.reprJSON();\n  }\n\n  #paramRegExp = /^x-[a-z0-9-]+$/i;\n\n  #validate(param, value) {\n    if (typeof param === \"undefined\" || typeof value === \"undefined\")\n      throw new MissingArgument(\n        \"Parameter name and value for AnyParameter must be supplied\"\n      );\n    else if (!this.#paramRegExp.test(param))\n      throw new InvalidArgument(\"Invalid parameter name for AnyParameter\");\n    else if (value.constructor.identifier !== \"ParameterValueType\")\n      throw new InvalidArgument(\"Invalid value for AnyParameter\");\n  }\n\n  constructor(param, value) {\n    super();\n\n    this.#validate(param, value);\n    this.#param = param;\n    this.#value = value;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(AnyParameter);\n"],"names":["AnyParameter","param","value","checkAbstractPropertiesAndMethods","Object","freeze","repr","reprXML","reprJSON","BaseParameter","MissingArgument","test","InvalidArgument","constructor","identifier"],"mappings":"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"}