"use strict";(self.webpackChunkvcard_4_docs=self.webpackChunkvcard_4_docs||[]).push([[9074],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>c});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},p=Object.keys(e);for(a=0;a<p.length;a++)r=p[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)r=p[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),s=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,p=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=s(r),c=n,N=d["".concat(l,".").concat(c)]||d[c]||u[c]||p;return r?a.createElement(N,o(o({ref:t},m),{},{components:r})):a.createElement(N,o({ref:t},m))}));function c(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=r.length,o=new Array(p);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var s=2;s<p;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7191:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>p,metadata:()=>i,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const p={title:"parse",hide_title:!0,sidebar_position:7},o="parse",i={unversionedId:"documentation/parse",id:"documentation/parse",title:"parse",description:"- This function is for parsing version 4.0 vCards.",source:"@site/docs/documentation/parse.md",sourceDirName:"documentation",slug:"/documentation/parse",permalink:"/vcard4/documentation/parse",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"parse",hide_title:!0,sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"VCARD",permalink:"/vcard4/documentation/vcard"}},l={},s=[{value:"API",id:"api",level:2},{value:"Usage",id:"usage",level:2},{value:"Properties and getters on returned object",id:"properties-and-getters-on-returned-object",level:2},{value:"Methods in the returned object",id:"methods-in-the-returned-object",level:2}],m={toc:s};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"parse"},(0,n.kt)("inlineCode",{parentName:"h1"},"parse")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"This function is for parsing version 4.0 vCards.")),(0,n.kt)("h2",{id:"api"},"API"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"parse")," is provided as a named export from the main ",(0,n.kt)("strong",{parentName:"p"},"vcard4")," module."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=ESM",title:"ESM"},'import { parse } from "vcard4";\n')),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=commonjs",title:"commonjs"},'const { parse } = require("vcard4");\n')))),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"As already mentioned ",(0,n.kt)("inlineCode",{parentName:"p"},"parse")," is a function, and it's for parsing vCards.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"It returns either:"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"an object containing the parsed vCard, or"),(0,n.kt)("li",{parentName:"ol"},"an array containing the objects in (i.) above, if the vCard contained\nmultiple contacts (vCards) within."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"parse")," should be called with a single argument of type string, that is a\nproperly formatted version 4.0 vCard."),(0,n.kt)("admonition",{parentName:"li",type:"note"},(0,n.kt)("p",{parentName:"admonition"},"The following example assumes the vCard is on disk, and ",(0,n.kt)("inlineCode",{parentName:"p"},"fs")," from node's API\nis used to read it.")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},'import fs from "fs";\n\nconst contact = await fs.promises\n  .readFile("simon_perreault.vcf")\n  .then((contact) => contact.toString());\n\nconst parsedCard = parse(contact);\n')),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:"title='Object returned by parse'",title:"'Object",returned:!0,by:!0,"parse'":!0},'{\n  parsedVcard: [\n    { group: null, property: "FN", parameters: {}, value: "Simon Perreault" },\n    {\n      group: null,\n      property: "N",\n      parameters: {},\n      value: {\n        familyNames: "Perreault",\n        givenNames: "Simon",\n        additionalNames: "",\n        honorificPrefixes: "",\n        honorificSuffixes: [Array]\n      }\n    },\n    { group: null, property: "BDAY", parameters: {}, value: "--0203" },\n    {\n      group: null,\n      property: "ANNIVERSARY",\n      parameters: {},\n      value: "20090808T1430-0500"\n    },\n    { group: null, property: "GENDER", parameters: {}, value: { sex: "M", gender: "" } },\n    { group: null, property: "LANG", parameters: { PREF: "1" }, value: "fr" },\n    { group: null, property: "LANG", parameters: { PREF: "2" }, value: "en" },\n    { group: null, property: "ORG", parameters: { TYPE: "work" }, value: "Viagenie" },\n    {\n      group: null,\n      property: "ADR",\n      parameters: { TYPE: "work" },\n      value: {\n        postOfficeBox: "",\n        extendedAddress: "Suite D2-630",\n        streetAddress: "2875 Laurier",\n        locality: "Quebec",\n        region: "QC",\n        postalCode: "G1V 2M2",\n        countryName: "Canada"\n      }\n    },\n    {\n      group: null,\n      property: "TEL",\n      parameters: { VALUE: "uri", TYPE: [Array], PREF: "1" },\n      value: "tel:+1-418-656-9254;ext=102"\n    },\n    {\n      group: null,\n      property: "TEL",\n      parameters: { VALUE: "uri", TYPE: [Array] },\n      value: "tel:+1-418-262-6501"\n    },\n    {\n      group: null,\n      property: "EMAIL",\n      parameters: { TYPE: "work" },\n      value: "simon.perreault@viagenie.ca"\n    },\n    {\n      group: null,\n      property: "GEO",\n      parameters: { TYPE: "work" },\n      value: "geo:46.772673,-71.282945"\n    },\n    {\n      group: null,\n      property: "KEY",\n      parameters: { TYPE: "work" },\n      value: "http://www.viagenie.ca/simon.perreault/simon.asc"\n    },\n    { group: null, property: "TZ", parameters: {}, value: "-0500" },\n    {\n      group: null,\n      property: "URL",\n      parameters: { TYPE: "home" },\n      value: "http://nomis80.org"\n    }\n  ],\n  properties: [Getter],\n  propertiesWithoutParameters: [Getter],\n  propertiesWithParameters: [Getter],\n  getProperty: [Function: getProperty],\n  groups: [Getter],\n  getGroup: [Function: getGroup],\n  repeatingProperties: [Getter]\n}\n')))),(0,n.kt)("h2",{id:"properties-and-getters-on-returned-object"},"Properties and getters on returned object"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"parsedVcard"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"This is an array containing the parsed content lines of the vCard.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"The parsed content lines in the array are objects with the following keys:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},'[\n  ...,\n  {\n    group: null,\n    property: "URL",\n    parameters: { TYPE: "home" },\n    value: "http://nomis80.org"\n  },\n  ...\n]\n')),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"group"))),(0,n.kt)("p",{parentName:"li"},"Its value is either ",(0,n.kt)("inlineCode",{parentName:"p"},"null")," or a string with the name the group of the property."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"{\n  group: null,\n  ...\n}\n")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},'{\n  group: "BOOK-CLUB",\n  ...\n}\n')),(0,n.kt)("ol",{parentName:"li",start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"property"))),(0,n.kt)("p",{parentName:"li"},"A string containing the property name."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},'{\n  ...,\n  property: "URL",\n  ...\n}\n')),(0,n.kt)("ol",{parentName:"li",start:3},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"parameters"))),(0,n.kt)("p",{parentName:"li"},"An object whose keys are the parameters of the property and the values are\nthe parameter values. The values may be strings or arrays of strings if the\nparticular parameter had multiple values."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},'{\n  ...,\n  parameters: { TYPE: "home" },\n  ...\n}\n')),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},'{\n  ...,\n  parameters: { TYPE: ["home", "fax"] },\n  ...\n}\n')),(0,n.kt)("ol",{parentName:"li",start:4},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"value"))),(0,n.kt)("p",{parentName:"li"},"This may take three forms:"),(0,n.kt)("p",{parentName:"li"},"a. For most properties, a string containing the value of the property."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},'{\n  ...,\n  value: "http://nomis80.org"\n}\n')),(0,n.kt)("p",{parentName:"li"},"b. For properties with multiple values, an array of strings."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"{\n  ...,\n  value: [ 'Example.com Inc.', 'Second Example, Inc.' ]\n}\n")),(0,n.kt)("p",{parentName:"li"},"c. For properties whose values are structured, such as ",(0,n.kt)("inlineCode",{parentName:"p"},"N"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"ADR")," and\n",(0,n.kt)("inlineCode",{parentName:"p"},"GENDER"),", the value is an object whose keys are the names of each\nof the structured components, and the values are strings or string\narrays."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:"title='value for N property'",title:"'value",for:!0,N:!0,"property'":!0},'{\n  ...,\n  value: {\n    familyNames: "Perreault",\n    givenNames: "Simon",\n    additionalNames: "",\n    honorificPrefixes: "",\n    honorificSuffixes: ["ing.", "jr."]\n  }\n}\n')),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:"title='value for ADR property'",title:"'value",for:!0,ADR:!0,"property'":!0},'{\n  ...,\n  value: {\n    postOfficeBox: "",\n    extendedAddress: "Suite D2-630",\n    streetAddress: "2875 Laurier",\n    locality: "Quebec",\n    region: "QC",\n    postalCode: "G1V 2M2",\n    countryName: "Canada"\n  }\n}\n')),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:"title='value for GENDER property'",title:"'value",for:!0,GENDER:!0,"property'":!0},'{\n  ...,\n  value: { sex: "M", gender: "" }\n}\n')))),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"properties"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"This getter returns a string array with the names of all properties in the\nparsed vCard.")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"The names are not repeated if a property is repeated")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"> const parsedCard = parse(contact);\n> parsedCard.properties;\n[\n  'FN',     'N',\n  'BDAY',   'ANNIVERSARY',\n  'GENDER', 'LANG',\n  'ORG',    'ADR',\n  'TEL',    'EMAIL',\n  'GEO',    'KEY',\n  'TZ',     'URL'\n]\n")),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"propertiesWithParameters"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"This getter returns a string array with the names of all properties in the\n",(0,n.kt)("inlineCode",{parentName:"li"},"parsedVcard")," that have parameters.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"> const parsedCard = parse(contact);\n> parsedCard.propertiesWithParameters;\n[\n  'LANG',  'ORG',\n  'ADR',   'TEL',\n  'EMAIL', 'GEO',\n  'KEY',   'URL'\n]\n")),(0,n.kt)("ol",{start:4},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"propertiesWithoutParameters"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"This getter returns a string array with the names of all properties in the\n",(0,n.kt)("inlineCode",{parentName:"li"},"parsedVcard")," that do not have parameters.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"> const parsedCard = parse(contact);\n> parsedCard.propertiesWithoutParameters;\n[ 'FN', 'N', 'BDAY', 'ANNIVERSARY', 'GENDER', 'TZ' ]\n")),(0,n.kt)("ol",{start:5},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"groups"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"This getter returns a string array with the names of all property groups in\nthe ",(0,n.kt)("inlineCode",{parentName:"li"},"parsedVcard"),". If there are none, it returns an empty array.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"> const parsedCard = parse(contact);\n> parsedCard.groups;\n[ 'STORY' ]\n")),(0,n.kt)("ol",{start:6},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"repeatingProperties"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"This getter returns an object whose keys are the names of the properties and\nthe values are the number of times they appear in the ",(0,n.kt)("inlineCode",{parentName:"p"},"parsedVcard"),".")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"If there are no repeating properties, an empty object is returned"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"> const parsedCard = parse(contact);\n> parsedCard.repeatingProperties;\n{ LANG: 2, TEL: 2 }\n")),(0,n.kt)("h2",{id:"methods-in-the-returned-object"},"Methods in the returned object"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"getProperty"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"This method should be called with a single argument of type string that is\nthe name of a property in the vCard.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"It returns an array containing parsed objects of that property (may be one or\nmore, depending on how many times the property appears in the vCard).")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"If the property is not in the vCard, an empty array is returned."))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"> const parsedCard = parse(contact);\n> parsedCard.getProperty('EMAIL');\n[\n  {\n    group: 'work',\n    property: 'EMAIL',\n    parameters: { TYPE: 'work' },\n    value: 'simon.perreault@viagenie.ca'\n  }\n]\n")),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"getGroup"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"This method should be called with a single argument of type string that is\nthe name of a property group in the vCard.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"It returns an array of parsed objects of all the properties in the group.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"If there are no properties with the group, an empty array is returned."))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"> const parsedCard = parse(contact);\n> parsedCard.getGroup('STORY');\n[\n  {\n    group: 'STORY',\n    property: 'TITLE',\n    parameters: {},\n    value: 'Imaginary test person'\n  },\n  {\n    group: 'STORY',\n    property: 'NOTE',\n    parameters: {},\n    value: 'John Doe has a long and varied history, being documented on more police files than anyone else. Reports of his death are alas numerous.'\n  }\n]\n")))}u.isMDXComponent=!0}}]);