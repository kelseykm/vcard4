"use strict";(self.webpackChunkvcard_4_docs=self.webpackChunkvcard_4_docs||[]).push([[9497],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=s(n),d=a,y=c["".concat(l,".").concat(d)]||c[d]||m[d]||i;return n?r.createElement(y,p(p({ref:t},u),{},{components:n})):r.createElement(y,p({ref:t},u))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,p=new Array(i);p[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[c]="string"==typeof e?e:a,p[1]=o;for(var s=2;s<i;s++)p[s]=n[s];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9016:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={title:"IntegerType and IntegerListType",sidebar_position:7,hide_title:!0},p="IntegerType and IntegerListType",o={unversionedId:"documentation/values/integertype-and-integerlisttype",id:"documentation/values/integertype-and-integerlisttype",title:"IntegerType and IntegerListType",description:'- These classes represent the "integer" and "integer-list" data types',source:"@site/docs/documentation/values/integertype-and-integerlisttype.md",sourceDirName:"documentation/values",slug:"/documentation/values/integertype-and-integerlisttype",permalink:"/vcard4/documentation/values/integertype-and-integerlisttype",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"IntegerType and IntegerListType",sidebar_position:7,hide_title:!0},sidebar:"tutorialSidebar",previous:{title:"BooleanType",permalink:"/vcard4/documentation/values/booleantype"},next:{title:"FloatType and FloatListType",permalink:"/vcard4/documentation/values/floattype-and-floatlisttype"}},l={},s=[],u={toc:s},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"integertype-and-integerlisttype"},(0,a.kt)("inlineCode",{parentName:"h1"},"IntegerType")," and ",(0,a.kt)("inlineCode",{parentName:"h1"},"IntegerListType")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'These classes represent the "integer" and "integer-list" data types\nrespectively')),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"IntegerType"),' should be called with a single argument of type number or\nbigint. The value may have a sign ("-" or "+")'),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},"new IntegerType(1n);\n\nnew IntegerType(-30);\n\nnew IntegerType(5);\n\nnew IntegerType(-45n);\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The maximum value is ",(0,a.kt)("inlineCode",{parentName:"p"},"9223372036854775807n"),", and the minimum value is\n",(0,a.kt)("inlineCode",{parentName:"p"},"-9223372036854775808n")," when using bigint values, but when using values of\ntype number, the maximum number is ",(0,a.kt)("inlineCode",{parentName:"p"},"Number.MAX_SAFE_INTEGER")," and the minimum\nis ",(0,a.kt)("inlineCode",{parentName:"p"},"Number.MIN_SAFE_INTEGER"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"IntegerListType")," should be called with a single argument that is an array of\n",(0,a.kt)("inlineCode",{parentName:"p"},"IntegerType"),"s"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},"new IntegerListType([\n  new IntegerType(1),\n  new IntegerType(4e2),\n  new IntegerType(33n),\n]);\n")))))}m.isMDXComponent=!0}}]);