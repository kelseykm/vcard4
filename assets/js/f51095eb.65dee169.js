"use strict";(self.webpackChunkvcard_4_docs=self.webpackChunkvcard_4_docs||[]).push([[3257],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),y=c(n),d=r,f=y["".concat(p,".").concat(d)]||y[d]||u[d]||o;return n?a.createElement(f,l(l({ref:t},s),{},{components:n})):a.createElement(f,l({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=y;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},9166:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return s},default:function(){return y}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),l=["components"],i={title:"FloatType and FloatListType",sidebar_position:8,hide_title:!0},p="``FloatType``` and ```FloatListType``",c={unversionedId:"documentation/values/floattype-and-floatlisttype",id:"documentation/values/floattype-and-floatlisttype",title:"FloatType and FloatListType",description:'* These classes represent the "float" and "float-list" data types respectively',source:"@site/docs/documentation/values/floattype-and-floatlisttype.md",sourceDirName:"documentation/values",slug:"/documentation/values/floattype-and-floatlisttype",permalink:"/vcard4/documentation/values/floattype-and-floatlisttype",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"FloatType and FloatListType",sidebar_position:8,hide_title:!0},sidebar:"tutorialSidebar",previous:{title:"IntegerType and IntegerListType",permalink:"/vcard4/documentation/values/integertype-and-integerlisttype"},next:{title:"LanguageTagType",permalink:"/vcard4/documentation/values/languagetagtype"}},s=[],u={toc:s};function y(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"floattype-and-floatlisttype"},(0,o.kt)("inlineCode",{parentName:"h1"},"FloatType")," and ",(0,o.kt)("inlineCode",{parentName:"h1"},"FloatListType")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},'These classes represent the "float" and "float-list" data types respectively')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"FloatType"),' should be called with a single argument of type number or string. The value may have a sign ("-" or "+")')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The value must have a decimal point."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"new FloatType('-35.00');\n\nnew FloatType(90.234);\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"FloatListType")," should be called with a single argument that is an array of ",(0,o.kt)("inlineCode",{parentName:"p"},"FloatType"),"s"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"new FloatListType([\n  new FloatType(1.455),\n  new FloatType(-345),\n  new FloatType('33.000')\n]);\n")))))}y.isMDXComponent=!0}}]);