"use strict";(self.webpackChunkvcard_4_docs=self.webpackChunkvcard_4_docs||[]).push([[6344],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=s(n),c=r,y=u["".concat(l,".").concat(c)]||u[c]||d[c]||i;return n?a.createElement(y,p(p({ref:t},m),{},{components:n})):a.createElement(y,p({ref:t},m))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,p=new Array(i);p[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,p[1]=o;for(var s=2;s<i;s++)p[s]=n[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6014:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(3117),r=(n(7294),n(3905));const i={title:"SpecialValueType",hide_title:!0,sidebar_position:11},p="SpecialValueType",o={unversionedId:"documentation/values/specialvaluetype",id:"documentation/values/specialvaluetype",title:"SpecialValueType",description:"- This class is for use with properties which do not have values of the types",source:"@site/docs/documentation/values/specialvaluetype.md",sourceDirName:"documentation/values",slug:"/documentation/values/specialvaluetype",permalink:"/vcard4/documentation/values/specialvaluetype",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{title:"SpecialValueType",hide_title:!0,sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"SexType",permalink:"/vcard4/documentation/values/sextype"},next:{title:"Introduction",permalink:"/vcard4/documentation/parameters/intro"}},l={},s=[{value:"Use with <code>KindProperty</code>",id:"use-with-kindproperty",level:2},{value:"Use with <code>NProperty</code>",id:"use-with-nproperty",level:2},{value:"Use with <code>GenderProperty</code>",id:"use-with-genderproperty",level:2},{value:"Use with <code>AdrProperty</code>",id:"use-with-adrproperty",level:2},{value:"Use with <code>OrgProperty</code>",id:"use-with-orgproperty",level:2},{value:"Use with <code>ClientpidmapProperty</code>",id:"use-with-clientpidmapproperty",level:2}],m={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"specialvaluetype"},(0,r.kt)("inlineCode",{parentName:"h1"},"SpecialValueType")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"This class is for use with properties which do not have values of the types\nalready described. Those properties include:"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/documentation/properties/kindproperty"},(0,r.kt)("inlineCode",{parentName:"a"},"KindProperty"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/documentation/properties/nproperty"},(0,r.kt)("inlineCode",{parentName:"a"},"NProperty"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/documentation/properties/genderproperty"},(0,r.kt)("inlineCode",{parentName:"a"},"GenderProperty"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/documentation/properties/adrproperty"},(0,r.kt)("inlineCode",{parentName:"a"},"AdrProperty"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/documentation/properties/orgproperty"},(0,r.kt)("inlineCode",{parentName:"a"},"OrgProperty"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/documentation/properties/clientpidmapproperty"},(0,r.kt)("inlineCode",{parentName:"a"},"ClientpidmapProperty"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"SpecialValueType")," should be called with two arguments. The first should be\nthe value and the second should be the target property")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The second argument that specifies the target property should have as a value\na string with the name of one the six classes listed above (case insensitive)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The value of the first argument depends on the value of the second argument"))),(0,r.kt)("h2",{id:"use-with-kindproperty"},"Use with ",(0,r.kt)("inlineCode",{parentName:"h2"},"KindProperty")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Where the second argument is ",(0,r.kt)("inlineCode",{parentName:"p"},"'KindProperty'")," (case insensitive), the only\naccepted values for the first argument are ",(0,r.kt)("inlineCode",{parentName:"p"},"'individual'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'group'"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"'org'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'location'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'application'")," or an identifier registered with IANA"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'new SpecialValueType("org", "KindProperty");\n')))),(0,r.kt)("h2",{id:"use-with-nproperty"},"Use with ",(0,r.kt)("inlineCode",{parentName:"h2"},"NProperty")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Where the second argument is ",(0,r.kt)("inlineCode",{parentName:"p"},"'NProperty'")," (case insensitive), the only\naccepted value for the first argument is an array of length 5. The items in\nthe array, if present, must be of type ",(0,r.kt)("a",{parentName:"p",href:"texttype-and-textlisttype"},(0,r.kt)("inlineCode",{parentName:"a"},"TextType")),"\nor ",(0,r.kt)("a",{parentName:"p",href:"texttype-and-textlisttype"},(0,r.kt)("inlineCode",{parentName:"a"},"TextListType")),", otherwise, ",(0,r.kt)("strong",{parentName:"p"},"they must be left\nempty")),(0,r.kt)("admonition",{parentName:"li",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If you want some array elements to be left empty, you initialise an array of\nthe requisite length, and then only fill the indices you want to fill"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The 5 items in the array correspond to the following respectively:"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Family Names (also known as surnames)"),(0,r.kt)("li",{parentName:"ol"},"Given Names"),(0,r.kt)("li",{parentName:"ol"},"Additional Names"),(0,r.kt)("li",{parentName:"ol"},"Honorific Prefixes"),(0,r.kt)("li",{parentName:"ol"},"Honorific Suffixes"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Individual text components can include multiple text values (hence the use of\n",(0,r.kt)("a",{parentName:"p",href:"texttype-and-textlisttype"},(0,r.kt)("inlineCode",{parentName:"a"},"TextListType")),"). In the example below, the\nperson has multiple honorific prefixes"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const nameArr = new Array(5);\nnameArr[0] = new TextType("Doe");\nnameArr[1] = new TextType("John");\nnameArr[3] = new TextListType([new TextType("Mr."), new TextType("Dr.")]);\n\nnew SpecialValueType(nameArr, "NProperty");\n')))),(0,r.kt)("h2",{id:"use-with-genderproperty"},"Use with ",(0,r.kt)("inlineCode",{parentName:"h2"},"GenderProperty")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Where the second argument is ",(0,r.kt)("inlineCode",{parentName:"p"},"'GenderProperty'")," (case insensitive), the only\naccepted value for the first argument is an array of length 2. The first item\nin the array, if present, must be of type ",(0,r.kt)("a",{parentName:"p",href:"sextype"},(0,r.kt)("inlineCode",{parentName:"a"},"SexType")),", while the\nsecond, if present, must be of the type\n",(0,r.kt)("a",{parentName:"p",href:"texttype-and-textlisttype"},(0,r.kt)("inlineCode",{parentName:"a"},"TextType")),", otherwise, ",(0,r.kt)("strong",{parentName:"p"},"they must be left\nempty"),". Note that ",(0,r.kt)("strong",{parentName:"p"},"only one")," can be left empty, so if one is left empty, the\nother must be present"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'new SpecialValueType(\n  [new SexType("O"), new TextType("intersex")],\n  "GenderProperty"\n);\n')))),(0,r.kt)("h2",{id:"use-with-adrproperty"},"Use with ",(0,r.kt)("inlineCode",{parentName:"h2"},"AdrProperty")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Where the second argument is ",(0,r.kt)("inlineCode",{parentName:"p"},"'AdrProperty'")," (case insensitive), the only\naccepted value for the first argument is an array of length 7. The items in\nthe array, if present, must be of type ",(0,r.kt)("a",{parentName:"p",href:"texttype-and-textlisttype"},(0,r.kt)("inlineCode",{parentName:"a"},"TextType")),",\notherwise, ",(0,r.kt)("strong",{parentName:"p"},"they must be left empty"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The 7 items in the array correspond to the following respectively:"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"the post office box"),(0,r.kt)("li",{parentName:"ol"},"the extended address (e.g., apartment or suite number)"),(0,r.kt)("li",{parentName:"ol"},"the street address"),(0,r.kt)("li",{parentName:"ol"},"the locality (e.g., city)"),(0,r.kt)("li",{parentName:"ol"},"the region (e.g., state or province)"),(0,r.kt)("li",{parentName:"ol"},"the postal code"),(0,r.kt)("li",{parentName:"ol"},"the country name (full name)")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const adrArr = new Array(7);\nadrArr[3] = new TextType("Main street");\n\nnew SpecialValueType(adrArr, "AdrProperty");\n')))),(0,r.kt)("h2",{id:"use-with-orgproperty"},"Use with ",(0,r.kt)("inlineCode",{parentName:"h2"},"OrgProperty")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Where the second argument is ",(0,r.kt)("inlineCode",{parentName:"p"},"'OrgProperty'")," (case insensitive), the only\naccepted value for the first argument is an array, with at least one item but\nwith no length limit. The items in the array must be of type\n",(0,r.kt)("a",{parentName:"p",href:"texttype-and-textlisttype"},(0,r.kt)("inlineCode",{parentName:"a"},"TextType"))),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'new SpecialValueType(\n  [new TextType("Example.com Inc."), new TextType("Marketing")],\n  "orgproperty"\n);\n')))),(0,r.kt)("h2",{id:"use-with-clientpidmapproperty"},"Use with ",(0,r.kt)("inlineCode",{parentName:"h2"},"ClientpidmapProperty")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Where the second argument is ",(0,r.kt)("inlineCode",{parentName:"p"},"'ClientpidmapProperty'")," (case insensitive), the\nonly accepted value for the first argument is an array of length 2. The first\nitem in the array must be of type\n",(0,r.kt)("a",{parentName:"p",href:"integertype-and-integerlisttype"},(0,r.kt)("inlineCode",{parentName:"a"},"IntegerType")),", while the second, must be of\nthe type ",(0,r.kt)("a",{parentName:"p",href:"uritype"},(0,r.kt)("inlineCode",{parentName:"a"},"URIType")),". ",(0,r.kt)("strong",{parentName:"p"},"None of the items can be left empty")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'new SpecialValueType(\n  [new IntegerType(1), new URIType("uuid:123-asmm-aams")],\n  "clientpidmapProperty"\n);\n')))))}d.isMDXComponent=!0}}]);